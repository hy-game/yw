// Code generated by protoc-gen-go. DO NOT EDIT.
// source: msg_config.proto

package pb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// ------------武将----------------
type Attr int32

const (
	Attr_Atk   Attr = 0
	Attr_Def   Attr = 1
	Attr_HP    Attr = 2
	Attr_Speed Attr = 3
)

var Attr_name = map[int32]string{
	0: "Atk",
	1: "Def",
	2: "HP",
	3: "Speed",
}
var Attr_value = map[string]int32{
	"Atk":   0,
	"Def":   1,
	"HP":    2,
	"Speed": 3,
}

func (x Attr) String() string {
	return proto.EnumName(Attr_name, int32(x))
}
func (Attr) EnumDescriptor() ([]byte, []int) { return fileDescriptor8, []int{0} }

type MsgOriginalCfgs struct {
	Inicfg     []*MsgStrKeyValue      `protobuf:"bytes,1,rep,name=inicfg" json:"inicfg,omitempty"`
	DirtyWords []*MsgStrKeyValueArray `protobuf:"bytes,2,rep,name=dirtyWords" json:"dirtyWords,omitempty"`
	TableCfgs  []*MsgTableCfg         `protobuf:"bytes,3,rep,name=tableCfgs" json:"tableCfgs,omitempty"`
	OtherCfgs  []*MsgBytesCfg         `protobuf:"bytes,4,rep,name=otherCfgs" json:"otherCfgs,omitempty"`
}

func (m *MsgOriginalCfgs) Reset()                    { *m = MsgOriginalCfgs{} }
func (m *MsgOriginalCfgs) String() string            { return proto.CompactTextString(m) }
func (*MsgOriginalCfgs) ProtoMessage()               {}
func (*MsgOriginalCfgs) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{0} }

func (m *MsgOriginalCfgs) GetInicfg() []*MsgStrKeyValue {
	if m != nil {
		return m.Inicfg
	}
	return nil
}

func (m *MsgOriginalCfgs) GetDirtyWords() []*MsgStrKeyValueArray {
	if m != nil {
		return m.DirtyWords
	}
	return nil
}

func (m *MsgOriginalCfgs) GetTableCfgs() []*MsgTableCfg {
	if m != nil {
		return m.TableCfgs
	}
	return nil
}

func (m *MsgOriginalCfgs) GetOtherCfgs() []*MsgBytesCfg {
	if m != nil {
		return m.OtherCfgs
	}
	return nil
}

type MsgTableCfg struct {
	Filename string   `protobuf:"bytes,1,opt,name=filename" json:"filename,omitempty"`
	Title    string   `protobuf:"bytes,2,opt,name=title" json:"title,omitempty"`
	Lines    []string `protobuf:"bytes,3,rep,name=lines" json:"lines,omitempty"`
}

func (m *MsgTableCfg) Reset()                    { *m = MsgTableCfg{} }
func (m *MsgTableCfg) String() string            { return proto.CompactTextString(m) }
func (*MsgTableCfg) ProtoMessage()               {}
func (*MsgTableCfg) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{1} }

func (m *MsgTableCfg) GetFilename() string {
	if m != nil {
		return m.Filename
	}
	return ""
}

func (m *MsgTableCfg) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *MsgTableCfg) GetLines() []string {
	if m != nil {
		return m.Lines
	}
	return nil
}

// 该配置数据适用于不能用通用处理方式处理的配置文件
type MsgBytesCfg struct {
	Filename string `protobuf:"bytes,1,opt,name=filename" json:"filename,omitempty"`
	Fileext  string `protobuf:"bytes,2,opt,name=fileext" json:"fileext,omitempty"`
	Filebody []byte `protobuf:"bytes,3,opt,name=filebody,proto3" json:"filebody,omitempty"`
}

func (m *MsgBytesCfg) Reset()                    { *m = MsgBytesCfg{} }
func (m *MsgBytesCfg) String() string            { return proto.CompactTextString(m) }
func (*MsgBytesCfg) ProtoMessage()               {}
func (*MsgBytesCfg) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{2} }

func (m *MsgBytesCfg) GetFilename() string {
	if m != nil {
		return m.Filename
	}
	return ""
}

func (m *MsgBytesCfg) GetFileext() string {
	if m != nil {
		return m.Fileext
	}
	return ""
}

func (m *MsgBytesCfg) GetFilebody() []byte {
	if m != nil {
		return m.Filebody
	}
	return nil
}

//
type MsgCfgBase struct {
	Name string  `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Rate float32 `protobuf:"fixed32,2,opt,name=rate" json:"rate,omitempty"`
}

func (m *MsgCfgBase) Reset()                    { *m = MsgCfgBase{} }
func (m *MsgCfgBase) String() string            { return proto.CompactTextString(m) }
func (*MsgCfgBase) ProtoMessage()               {}
func (*MsgCfgBase) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{3} }

func (m *MsgCfgBase) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *MsgCfgBase) GetRate() float32 {
	if m != nil {
		return m.Rate
	}
	return 0
}

type MsgAwardCell struct {
	Lv    int32    `protobuf:"zigzag32,1,opt,name=Lv,json=lv" json:"Lv,omitempty"`
	Award []string `protobuf:"bytes,2,rep,name=Award,json=award" json:"Award,omitempty"`
	Sp    bool     `protobuf:"varint,3,opt,name=Sp,json=sp" json:"Sp,omitempty"`
}

func (m *MsgAwardCell) Reset()                    { *m = MsgAwardCell{} }
func (m *MsgAwardCell) String() string            { return proto.CompactTextString(m) }
func (*MsgAwardCell) ProtoMessage()               {}
func (*MsgAwardCell) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{4} }

func (m *MsgAwardCell) GetLv() int32 {
	if m != nil {
		return m.Lv
	}
	return 0
}

func (m *MsgAwardCell) GetAward() []string {
	if m != nil {
		return m.Award
	}
	return nil
}

func (m *MsgAwardCell) GetSp() bool {
	if m != nil {
		return m.Sp
	}
	return false
}

func init() {
	proto.RegisterType((*MsgOriginalCfgs)(nil), "pb.MsgOriginalCfgs")
	proto.RegisterType((*MsgTableCfg)(nil), "pb.MsgTableCfg")
	proto.RegisterType((*MsgBytesCfg)(nil), "pb.MsgBytesCfg")
	proto.RegisterType((*MsgCfgBase)(nil), "pb.MsgCfgBase")
	proto.RegisterType((*MsgAwardCell)(nil), "pb.MsgAwardCell")
	proto.RegisterEnum("pb.Attr", Attr_name, Attr_value)
}

func init() { proto.RegisterFile("msg_config.proto", fileDescriptor8) }

var fileDescriptor8 = []byte{
	// 382 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x92, 0x5f, 0xcf, 0xd2, 0x30,
	0x18, 0xc5, 0x5d, 0xc7, 0xbf, 0x3d, 0x10, 0x99, 0x8d, 0x89, 0x0b, 0x57, 0x64, 0x57, 0x04, 0x23,
	0x17, 0x6a, 0xe2, 0xf5, 0x80, 0x0b, 0x12, 0x5d, 0x34, 0xc5, 0x3f, 0x97, 0xa4, 0x63, 0x5d, 0x6d,
	0x2c, 0xdb, 0xd2, 0x16, 0x74, 0xdf, 0xd3, 0x0f, 0x64, 0xda, 0x0d, 0xe4, 0xcd, 0x9b, 0xbc, 0x77,
	0xcf, 0x39, 0xfd, 0x9d, 0xd3, 0x67, 0x59, 0x21, 0x3c, 0x69, 0x7e, 0x38, 0x56, 0x65, 0x21, 0xf8,
	0xaa, 0x56, 0x95, 0xa9, 0x30, 0xaa, 0xb3, 0x99, 0x73, 0xeb, 0x73, 0x26, 0xc5, 0xb1, 0x75, 0xe3,
	0xbf, 0x1e, 0x4c, 0x53, 0xcd, 0x3f, 0x2b, 0xc1, 0x45, 0x49, 0xe5, 0xa6, 0xe0, 0x1a, 0x2f, 0x61,
	0x20, 0x4a, 0x71, 0x2c, 0x78, 0xe4, 0xcd, 0xfd, 0xc5, 0xf8, 0x2d, 0x5e, 0xd5, 0xd9, 0x2a, 0xd5,
	0x7c, 0x6f, 0xd4, 0x47, 0xd6, 0x7c, 0xa7, 0xf2, 0xcc, 0x48, 0x47, 0xe0, 0x0f, 0x00, 0xb9, 0x50,
	0xa6, 0xf9, 0x51, 0xa9, 0x5c, 0x47, 0xc8, 0xf1, 0xaf, 0x1e, 0xf3, 0x89, 0x52, 0xb4, 0x21, 0x77,
	0x28, 0x7e, 0x03, 0x81, 0xa1, 0x99, 0x64, 0xf6, 0xc6, 0xc8, 0x77, 0xb9, 0x69, 0x97, 0xfb, 0xda,
	0xf9, 0xe4, 0x3f, 0x61, 0xf1, 0xca, 0xfc, 0x64, 0xca, 0xe1, 0xbd, 0x07, 0xf8, 0xba, 0x31, 0x4c,
	0x3b, 0xfc, 0x46, 0xc4, 0xdf, 0x60, 0x7c, 0x57, 0x84, 0x67, 0x30, 0x2a, 0x84, 0x64, 0x25, 0x3d,
	0xb1, 0xc8, 0x9b, 0x7b, 0x8b, 0x80, 0xdc, 0x34, 0x7e, 0x09, 0x7d, 0x23, 0x8c, 0x64, 0x11, 0x72,
	0x07, 0xad, 0xb0, 0xae, 0x14, 0x25, 0x6b, 0x57, 0x0b, 0x48, 0x2b, 0xe2, 0x83, 0xab, 0xbd, 0x5e,
	0xf8, 0x64, 0x6d, 0x04, 0x43, 0x3b, 0xb3, 0x3f, 0xa6, 0x2b, 0xbe, 0xca, 0x6b, 0x2a, 0xab, 0xf2,
	0x26, 0xf2, 0xe7, 0xde, 0x62, 0x42, 0x6e, 0x3a, 0x7e, 0x0f, 0x90, 0x6a, 0xbe, 0x29, 0xf8, 0x9a,
	0x6a, 0x86, 0x31, 0xf4, 0xee, 0xba, 0xdd, 0x6c, 0x3d, 0x45, 0x4d, 0xbb, 0x2d, 0x22, 0x6e, 0x8e,
	0xb7, 0x30, 0x49, 0x35, 0x4f, 0x7e, 0x53, 0x95, 0x6f, 0x98, 0x94, 0xf8, 0x39, 0xa0, 0x4f, 0x17,
	0x97, 0x7a, 0x41, 0x90, 0xbc, 0xd8, 0x8f, 0x71, 0x87, 0xee, 0xff, 0x04, 0xa4, 0x4f, 0xad, 0xb0,
	0xd4, 0xbe, 0x76, 0x1b, 0x8c, 0x08, 0xd2, 0xf5, 0xf2, 0x35, 0xf4, 0x12, 0x63, 0x14, 0x1e, 0x82,
	0x9f, 0x98, 0x5f, 0xe1, 0x33, 0x3b, 0x6c, 0x59, 0x11, 0x7a, 0x78, 0x00, 0x68, 0xf7, 0x25, 0x44,
	0x38, 0x80, 0xfe, 0xbe, 0x66, 0x2c, 0x0f, 0xfd, 0x35, 0xda, 0xf9, 0xd9, 0xc0, 0x3d, 0xa1, 0x77,
	0xff, 0x02, 0x00, 0x00, 0xff, 0xff, 0x4b, 0xbb, 0x9d, 0x88, 0x6c, 0x02, 0x00, 0x00,
}
