// Code generated by protoc-gen-go. DO NOT EDIT.
// source: msg.proto

package pb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// -----------------道具---------------------------//
type ESpecialItem int32

const (
	ESpecialItem_JinBi ESpecialItem = 0
)

var ESpecialItem_name = map[int32]string{
	0: "JinBi",
}
var ESpecialItem_value = map[string]int32{
	"JinBi": 0,
}

func (x ESpecialItem) String() string {
	return proto.EnumName(ESpecialItem_name, int32(x))
}
func (ESpecialItem) EnumDescriptor() ([]byte, []int) { return fileDescriptor3, []int{0} }

type EItemType int32

const (
	EItemType_None          EItemType = 0
	EItemType_Equipment     EItemType = 1
	EItemType_Hero          EItemType = 2
	EItemType_Good          EItemType = 3
	EItemType_Stone         EItemType = 4
	EItemType_Head          EItemType = 5
	EItemType_Privilege     EItemType = 6
	EItemType_TouXiangKuang EItemType = 7
)

var EItemType_name = map[int32]string{
	0: "None",
	1: "Equipment",
	2: "Hero",
	3: "Good",
	4: "Stone",
	5: "Head",
	6: "Privilege",
	7: "TouXiangKuang",
}
var EItemType_value = map[string]int32{
	"None":          0,
	"Equipment":     1,
	"Hero":          2,
	"Good":          3,
	"Stone":         4,
	"Head":          5,
	"Privilege":     6,
	"TouXiangKuang": 7,
}

func (x EItemType) String() string {
	return proto.EnumName(EItemType_name, int32(x))
}
func (EItemType) EnumDescriptor() ([]byte, []int) { return fileDescriptor3, []int{1} }

type EMailState int32

const (
	EMailState_EMSInit EMailState = 0
	EMailState_EMSRecv EMailState = 1
)

var EMailState_name = map[int32]string{
	0: "EMSInit",
	1: "EMSRecv",
}
var EMailState_value = map[string]int32{
	"EMSInit": 0,
	"EMSRecv": 1,
}

func (x EMailState) String() string {
	return proto.EnumName(EMailState_name, int32(x))
}
func (EMailState) EnumDescriptor() ([]byte, []int) { return fileDescriptor3, []int{2} }

// --------------剧情关卡相关----------------------------------//
type EFBType int32

const (
	EFBType_FBTNormal EFBType = 0
)

var EFBType_name = map[int32]string{
	0: "FBTNormal",
}
var EFBType_value = map[string]int32{
	"FBTNormal": 0,
}

func (x EFBType) String() string {
	return proto.EnumName(EFBType_name, int32(x))
}
func (EFBType) EnumDescriptor() ([]byte, []int) { return fileDescriptor3, []int{3} }

// -----------------阵型--------------------------------------//
type EFormationType int32

const (
	EFormationType_EFBNormal EFormationType = 0
)

var EFormationType_name = map[int32]string{
	0: "EFBNormal",
}
var EFormationType_value = map[string]int32{
	"EFBNormal": 0,
}

func (x EFormationType) String() string {
	return proto.EnumName(EFormationType_name, int32(x))
}
func (EFormationType) EnumDescriptor() ([]byte, []int) { return fileDescriptor3, []int{4} }

// -----------------排行榜-------------------------------------//
type ERankListType int32

const (
	ERankListType_ERLT_PlayerLv ERankListType = 0
)

var ERankListType_name = map[int32]string{
	0: "ERLT_PlayerLv",
}
var ERankListType_value = map[string]int32{
	"ERLT_PlayerLv": 0,
}

func (x ERankListType) String() string {
	return proto.EnumName(ERankListType_name, int32(x))
}
func (ERankListType) EnumDescriptor() ([]byte, []int) { return fileDescriptor3, []int{5} }

type MsgMailProto_Operator int32

const (
	MsgMailProto_Add MsgMailProto_Operator = 0
)

var MsgMailProto_Operator_name = map[int32]string{
	0: "Add",
}
var MsgMailProto_Operator_value = map[string]int32{
	"Add": 0,
}

func (x MsgMailProto_Operator) String() string {
	return proto.EnumName(MsgMailProto_Operator_name, int32(x))
}
func (MsgMailProto_Operator) EnumDescriptor() ([]byte, []int) { return fileDescriptor3, []int{3, 0} }

type MsgHeroPinJieUpReq_PinJieUpType int32

const (
	MsgHeroPinJieUpReq_Normal     MsgHeroPinJieUpReq_PinJieUpType = 0
	MsgHeroPinJieUpReq_ShengPinKa MsgHeroPinJieUpReq_PinJieUpType = 1
	MsgHeroPinJieUpReq_ZhiShengKa MsgHeroPinJieUpReq_PinJieUpType = 2
)

var MsgHeroPinJieUpReq_PinJieUpType_name = map[int32]string{
	0: "Normal",
	1: "ShengPinKa",
	2: "ZhiShengKa",
}
var MsgHeroPinJieUpReq_PinJieUpType_value = map[string]int32{
	"Normal":     0,
	"ShengPinKa": 1,
	"ZhiShengKa": 2,
}

func (x MsgHeroPinJieUpReq_PinJieUpType) String() string {
	return proto.EnumName(MsgHeroPinJieUpReq_PinJieUpType_name, int32(x))
}
func (MsgHeroPinJieUpReq_PinJieUpType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor3, []int{8, 0}
}

type MsgHeroProto_Operator int32

const (
	MsgHeroProto_Add      MsgHeroProto_Operator = 0
	MsgHeroProto_Del      MsgHeroProto_Operator = 1
	MsgHeroProto_LevelUp  MsgHeroProto_Operator = 2
	MsgHeroProto_StarUp   MsgHeroProto_Operator = 3
	MsgHeroProto_PinJieUp MsgHeroProto_Operator = 4
)

var MsgHeroProto_Operator_name = map[int32]string{
	0: "Add",
	1: "Del",
	2: "LevelUp",
	3: "StarUp",
	4: "PinJieUp",
}
var MsgHeroProto_Operator_value = map[string]int32{
	"Add":      0,
	"Del":      1,
	"LevelUp":  2,
	"StarUp":   3,
	"PinJieUp": 4,
}

func (x MsgHeroProto_Operator) String() string {
	return proto.EnumName(MsgHeroProto_Operator_name, int32(x))
}
func (MsgHeroProto_Operator) EnumDescriptor() ([]byte, []int) { return fileDescriptor3, []int{9, 0} }

type MsgRanklistHandle_EOper int32

const (
	MsgRanklistHandle_Update MsgRanklistHandle_EOper = 0
	MsgRanklistHandle_Pack   MsgRanklistHandle_EOper = 1
)

var MsgRanklistHandle_EOper_name = map[int32]string{
	0: "Update",
	1: "Pack",
}
var MsgRanklistHandle_EOper_value = map[string]int32{
	"Update": 0,
	"Pack":   1,
}

func (x MsgRanklistHandle_EOper) String() string {
	return proto.EnumName(MsgRanklistHandle_EOper_name, int32(x))
}
func (MsgRanklistHandle_EOper) EnumDescriptor() ([]byte, []int) { return fileDescriptor3, []int{15, 0} }

type CPriceItem struct {
	Mtype      EItemType `protobuf:"varint,1,opt,name=mtype,enum=pb.EItemType" json:"mtype,omitempty"`
	Oriname    int32     `protobuf:"zigzag32,2,opt,name=oriname" json:"oriname,omitempty"`
	Count      int32     `protobuf:"zigzag32,3,opt,name=count" json:"count,omitempty"`
	InnerParam int32     `protobuf:"zigzag32,4,opt,name=inner_param,json=innerParam" json:"inner_param,omitempty"`
	Exinfo     int32     `protobuf:"zigzag32,5,opt,name=exinfo" json:"exinfo,omitempty"`
}

func (m *CPriceItem) Reset()                    { *m = CPriceItem{} }
func (m *CPriceItem) String() string            { return proto.CompactTextString(m) }
func (*CPriceItem) ProtoMessage()               {}
func (*CPriceItem) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{0} }

func (m *CPriceItem) GetMtype() EItemType {
	if m != nil {
		return m.Mtype
	}
	return EItemType_None
}

func (m *CPriceItem) GetOriname() int32 {
	if m != nil {
		return m.Oriname
	}
	return 0
}

func (m *CPriceItem) GetCount() int32 {
	if m != nil {
		return m.Count
	}
	return 0
}

func (m *CPriceItem) GetInnerParam() int32 {
	if m != nil {
		return m.InnerParam
	}
	return 0
}

func (m *CPriceItem) GetExinfo() int32 {
	if m != nil {
		return m.Exinfo
	}
	return 0
}

type MsgMail struct {
	UUID     string       `protobuf:"bytes,1,opt,name=UUID,json=uUID" json:"UUID,omitempty"`
	RoleGuid uint32       `protobuf:"varint,2,opt,name=RoleGuid,json=roleGuid" json:"RoleGuid,omitempty"`
	Data     *MsgMailData `protobuf:"bytes,3,opt,name=Data,json=data" json:"Data,omitempty"`
}

func (m *MsgMail) Reset()                    { *m = MsgMail{} }
func (m *MsgMail) String() string            { return proto.CompactTextString(m) }
func (*MsgMail) ProtoMessage()               {}
func (*MsgMail) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{1} }

func (m *MsgMail) GetUUID() string {
	if m != nil {
		return m.UUID
	}
	return ""
}

func (m *MsgMail) GetRoleGuid() uint32 {
	if m != nil {
		return m.RoleGuid
	}
	return 0
}

func (m *MsgMail) GetData() *MsgMailData {
	if m != nil {
		return m.Data
	}
	return nil
}

type MsgMailData struct {
	CfgID  uint32        `protobuf:"varint,1,opt,name=CfgID,json=cfgID" json:"CfgID,omitempty"`
	Params []string      `protobuf:"bytes,2,rep,name=Params,json=params" json:"Params,omitempty"`
	Prize  []*CPriceItem `protobuf:"bytes,3,rep,name=Prize,json=prize" json:"Prize,omitempty"`
	State  EMailState    `protobuf:"varint,4,opt,name=State,json=state,enum=pb.EMailState" json:"State,omitempty"`
}

func (m *MsgMailData) Reset()                    { *m = MsgMailData{} }
func (m *MsgMailData) String() string            { return proto.CompactTextString(m) }
func (*MsgMailData) ProtoMessage()               {}
func (*MsgMailData) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{2} }

func (m *MsgMailData) GetCfgID() uint32 {
	if m != nil {
		return m.CfgID
	}
	return 0
}

func (m *MsgMailData) GetParams() []string {
	if m != nil {
		return m.Params
	}
	return nil
}

func (m *MsgMailData) GetPrize() []*CPriceItem {
	if m != nil {
		return m.Prize
	}
	return nil
}

func (m *MsgMailData) GetState() EMailState {
	if m != nil {
		return m.State
	}
	return EMailState_EMSInit
}

type MsgMailProto struct {
	Op      MsgMailProto_Operator `protobuf:"varint,1,opt,name=Op,json=op,enum=pb.MsgMailProto_Operator" json:"Op,omitempty"`
	OneMail *MsgMail              `protobuf:"bytes,2,opt,name=OneMail,json=oneMail" json:"OneMail,omitempty"`
}

func (m *MsgMailProto) Reset()                    { *m = MsgMailProto{} }
func (m *MsgMailProto) String() string            { return proto.CompactTextString(m) }
func (*MsgMailProto) ProtoMessage()               {}
func (*MsgMailProto) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{3} }

func (m *MsgMailProto) GetOp() MsgMailProto_Operator {
	if m != nil {
		return m.Op
	}
	return MsgMailProto_Add
}

func (m *MsgMailProto) GetOneMail() *MsgMail {
	if m != nil {
		return m.OneMail
	}
	return nil
}

// -----------------英雄相关操作----------------
type MsgHero struct {
	CfgId  uint32 `protobuf:"varint,1,opt,name=CfgId,json=cfgId" json:"CfgId,omitempty"`
	Guid   uint32 `protobuf:"varint,2,opt,name=Guid,json=guid" json:"Guid,omitempty"`
	Star   uint32 `protobuf:"varint,3,opt,name=Star,json=star" json:"Star,omitempty"`
	PinJie uint32 `protobuf:"varint,4,opt,name=PinJie,json=pinJie" json:"PinJie,omitempty"`
	Level  uint32 `protobuf:"varint,5,opt,name=Level,json=level" json:"Level,omitempty"`
	Exp    uint32 `protobuf:"varint,6,opt,name=Exp,json=exp" json:"Exp,omitempty"`
}

func (m *MsgHero) Reset()                    { *m = MsgHero{} }
func (m *MsgHero) String() string            { return proto.CompactTextString(m) }
func (*MsgHero) ProtoMessage()               {}
func (*MsgHero) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{4} }

func (m *MsgHero) GetCfgId() uint32 {
	if m != nil {
		return m.CfgId
	}
	return 0
}

func (m *MsgHero) GetGuid() uint32 {
	if m != nil {
		return m.Guid
	}
	return 0
}

func (m *MsgHero) GetStar() uint32 {
	if m != nil {
		return m.Star
	}
	return 0
}

func (m *MsgHero) GetPinJie() uint32 {
	if m != nil {
		return m.PinJie
	}
	return 0
}

func (m *MsgHero) GetLevel() uint32 {
	if m != nil {
		return m.Level
	}
	return 0
}

func (m *MsgHero) GetExp() uint32 {
	if m != nil {
		return m.Exp
	}
	return 0
}

type MsgItem struct {
	ID  uint32 `protobuf:"varint,1,opt,name=ID,json=iD" json:"ID,omitempty"`
	Cnt uint32 `protobuf:"varint,2,opt,name=Cnt,json=cnt" json:"Cnt,omitempty"`
}

func (m *MsgItem) Reset()                    { *m = MsgItem{} }
func (m *MsgItem) String() string            { return proto.CompactTextString(m) }
func (*MsgItem) ProtoMessage()               {}
func (*MsgItem) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{5} }

func (m *MsgItem) GetID() uint32 {
	if m != nil {
		return m.ID
	}
	return 0
}

func (m *MsgItem) GetCnt() uint32 {
	if m != nil {
		return m.Cnt
	}
	return 0
}

type MsgHeroUpReq struct {
	Guid uint32     `protobuf:"varint,1,opt,name=Guid,json=guid" json:"Guid,omitempty"`
	Cost []*MsgItem `protobuf:"bytes,2,rep,name=Cost,json=cost" json:"Cost,omitempty"`
}

func (m *MsgHeroUpReq) Reset()                    { *m = MsgHeroUpReq{} }
func (m *MsgHeroUpReq) String() string            { return proto.CompactTextString(m) }
func (*MsgHeroUpReq) ProtoMessage()               {}
func (*MsgHeroUpReq) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{6} }

func (m *MsgHeroUpReq) GetGuid() uint32 {
	if m != nil {
		return m.Guid
	}
	return 0
}

func (m *MsgHeroUpReq) GetCost() []*MsgItem {
	if m != nil {
		return m.Cost
	}
	return nil
}

type MsgHeroStarUpReq struct {
	Guid        uint32   `protobuf:"varint,1,opt,name=Guid,json=guid" json:"Guid,omitempty"`
	CostHero    []uint32 `protobuf:"varint,2,rep,packed,name=CostHero,json=costHero" json:"CostHero,omitempty"`
	SpeceilCost *MsgItem `protobuf:"bytes,3,opt,name=SpeceilCost,json=speceilCost" json:"SpeceilCost,omitempty"`
}

func (m *MsgHeroStarUpReq) Reset()                    { *m = MsgHeroStarUpReq{} }
func (m *MsgHeroStarUpReq) String() string            { return proto.CompactTextString(m) }
func (*MsgHeroStarUpReq) ProtoMessage()               {}
func (*MsgHeroStarUpReq) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{7} }

func (m *MsgHeroStarUpReq) GetGuid() uint32 {
	if m != nil {
		return m.Guid
	}
	return 0
}

func (m *MsgHeroStarUpReq) GetCostHero() []uint32 {
	if m != nil {
		return m.CostHero
	}
	return nil
}

func (m *MsgHeroStarUpReq) GetSpeceilCost() *MsgItem {
	if m != nil {
		return m.SpeceilCost
	}
	return nil
}

type MsgHeroPinJieUpReq struct {
	Guid uint32                          `protobuf:"varint,1,opt,name=Guid,json=guid" json:"Guid,omitempty"`
	Cost *MsgItem                        `protobuf:"bytes,2,opt,name=Cost,json=cost" json:"Cost,omitempty"`
	Type MsgHeroPinJieUpReq_PinJieUpType `protobuf:"varint,3,opt,name=Type,json=type,enum=pb.MsgHeroPinJieUpReq_PinJieUpType" json:"Type,omitempty"`
}

func (m *MsgHeroPinJieUpReq) Reset()                    { *m = MsgHeroPinJieUpReq{} }
func (m *MsgHeroPinJieUpReq) String() string            { return proto.CompactTextString(m) }
func (*MsgHeroPinJieUpReq) ProtoMessage()               {}
func (*MsgHeroPinJieUpReq) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{8} }

func (m *MsgHeroPinJieUpReq) GetGuid() uint32 {
	if m != nil {
		return m.Guid
	}
	return 0
}

func (m *MsgHeroPinJieUpReq) GetCost() *MsgItem {
	if m != nil {
		return m.Cost
	}
	return nil
}

func (m *MsgHeroPinJieUpReq) GetType() MsgHeroPinJieUpReq_PinJieUpType {
	if m != nil {
		return m.Type
	}
	return MsgHeroPinJieUpReq_Normal
}

type MsgHeroProto struct {
	Op        MsgHeroProto_Operator `protobuf:"varint,1,opt,name=Op,json=op,enum=pb.MsgHeroProto_Operator" json:"Op,omitempty"`
	UpReq     *MsgHeroUpReq         `protobuf:"bytes,2,opt,name=UpReq,json=upReq" json:"UpReq,omitempty"`
	StarReq   *MsgHeroStarUpReq     `protobuf:"bytes,3,opt,name=StarReq,json=starReq" json:"StarReq,omitempty"`
	PinJieReq *MsgHeroPinJieUpReq   `protobuf:"bytes,4,opt,name=PinJieReq,json=pinJieReq" json:"PinJieReq,omitempty"`
	Hero      *MsgHero              `protobuf:"bytes,5,opt,name=Hero,json=hero" json:"Hero,omitempty"`
	Guid      uint32                `protobuf:"varint,6,opt,name=Guid,json=guid" json:"Guid,omitempty"`
}

func (m *MsgHeroProto) Reset()                    { *m = MsgHeroProto{} }
func (m *MsgHeroProto) String() string            { return proto.CompactTextString(m) }
func (*MsgHeroProto) ProtoMessage()               {}
func (*MsgHeroProto) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{9} }

func (m *MsgHeroProto) GetOp() MsgHeroProto_Operator {
	if m != nil {
		return m.Op
	}
	return MsgHeroProto_Add
}

func (m *MsgHeroProto) GetUpReq() *MsgHeroUpReq {
	if m != nil {
		return m.UpReq
	}
	return nil
}

func (m *MsgHeroProto) GetStarReq() *MsgHeroStarUpReq {
	if m != nil {
		return m.StarReq
	}
	return nil
}

func (m *MsgHeroProto) GetPinJieReq() *MsgHeroPinJieUpReq {
	if m != nil {
		return m.PinJieReq
	}
	return nil
}

func (m *MsgHeroProto) GetHero() *MsgHero {
	if m != nil {
		return m.Hero
	}
	return nil
}

func (m *MsgHeroProto) GetGuid() uint32 {
	if m != nil {
		return m.Guid
	}
	return 0
}

type MsgFBHistroy struct {
	Star uint32 `protobuf:"varint,1,opt,name=Star,json=star" json:"Star,omitempty"`
	Cnt  uint32 `protobuf:"varint,2,opt,name=Cnt,json=cnt" json:"Cnt,omitempty"`
}

func (m *MsgFBHistroy) Reset()                    { *m = MsgFBHistroy{} }
func (m *MsgFBHistroy) String() string            { return proto.CompactTextString(m) }
func (*MsgFBHistroy) ProtoMessage()               {}
func (*MsgFBHistroy) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{10} }

func (m *MsgFBHistroy) GetStar() uint32 {
	if m != nil {
		return m.Star
	}
	return 0
}

func (m *MsgFBHistroy) GetCnt() uint32 {
	if m != nil {
		return m.Cnt
	}
	return 0
}

type MsgFBData struct {
	Cur     uint32                   `protobuf:"varint,1,opt,name=Cur,json=cur" json:"Cur,omitempty"`
	Histroy map[uint32]*MsgFBHistroy `protobuf:"bytes,2,rep,name=Histroy,json=histroy" json:"Histroy,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *MsgFBData) Reset()                    { *m = MsgFBData{} }
func (m *MsgFBData) String() string            { return proto.CompactTextString(m) }
func (*MsgFBData) ProtoMessage()               {}
func (*MsgFBData) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{11} }

func (m *MsgFBData) GetCur() uint32 {
	if m != nil {
		return m.Cur
	}
	return 0
}

func (m *MsgFBData) GetHistroy() map[uint32]*MsgFBHistroy {
	if m != nil {
		return m.Histroy
	}
	return nil
}

type MsgFormation struct {
	HeroID []uint32 `protobuf:"varint,1,rep,packed,name=HeroID,json=heroID" json:"HeroID,omitempty"`
}

func (m *MsgFormation) Reset()                    { *m = MsgFormation{} }
func (m *MsgFormation) String() string            { return proto.CompactTextString(m) }
func (*MsgFormation) ProtoMessage()               {}
func (*MsgFormation) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{12} }

func (m *MsgFormation) GetHeroID() []uint32 {
	if m != nil {
		return m.HeroID
	}
	return nil
}

// 用于排行的数据
type MsgRankListData struct {
	Id       uint32 `protobuf:"varint,1,opt,name=Id,json=id" json:"Id,omitempty"`
	Score    uint64 `protobuf:"varint,2,opt,name=Score,json=score" json:"Score,omitempty"`
	Name     string `protobuf:"bytes,3,opt,name=Name,json=name" json:"Name,omitempty"`
	Level    uint32 `protobuf:"varint,4,opt,name=Level,json=level" json:"Level,omitempty"`
	Protrait uint32 `protobuf:"varint,5,opt,name=Protrait,json=protrait" json:"Protrait,omitempty"`
	AllyName string `protobuf:"bytes,6,opt,name=AllyName,json=allyName" json:"AllyName,omitempty"`
}

func (m *MsgRankListData) Reset()                    { *m = MsgRankListData{} }
func (m *MsgRankListData) String() string            { return proto.CompactTextString(m) }
func (*MsgRankListData) ProtoMessage()               {}
func (*MsgRankListData) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{13} }

func (m *MsgRankListData) GetId() uint32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *MsgRankListData) GetScore() uint64 {
	if m != nil {
		return m.Score
	}
	return 0
}

func (m *MsgRankListData) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *MsgRankListData) GetLevel() uint32 {
	if m != nil {
		return m.Level
	}
	return 0
}

func (m *MsgRankListData) GetProtrait() uint32 {
	if m != nil {
		return m.Protrait
	}
	return 0
}

func (m *MsgRankListData) GetAllyName() string {
	if m != nil {
		return m.AllyName
	}
	return ""
}

// 打包排行榜数据
type MsgRankListPack struct {
	Type   ERankListType      `protobuf:"varint,1,opt,name=Type,json=type,enum=pb.ERankListType" json:"Type,omitempty"`
	Data   []*MsgRankListData `protobuf:"bytes,2,rep,name=Data,json=data" json:"Data,omitempty"`
	MyRank int32              `protobuf:"zigzag32,3,opt,name=MyRank,json=myRank" json:"MyRank,omitempty"`
}

func (m *MsgRankListPack) Reset()                    { *m = MsgRankListPack{} }
func (m *MsgRankListPack) String() string            { return proto.CompactTextString(m) }
func (*MsgRankListPack) ProtoMessage()               {}
func (*MsgRankListPack) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{14} }

func (m *MsgRankListPack) GetType() ERankListType {
	if m != nil {
		return m.Type
	}
	return ERankListType_ERLT_PlayerLv
}

func (m *MsgRankListPack) GetData() []*MsgRankListData {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *MsgRankListPack) GetMyRank() int32 {
	if m != nil {
		return m.MyRank
	}
	return 0
}

// 排行榜更新数据
type MsgRanklistHandle struct {
	Oper     MsgRanklistHandle_EOper `protobuf:"varint,1,opt,name=Oper,json=oper,enum=pb.MsgRanklistHandle_EOper" json:"Oper,omitempty"`
	Type     ERankListType           `protobuf:"varint,2,opt,name=Type,json=type,enum=pb.ERankListType" json:"Type,omitempty"`
	Data     *MsgRankListData        `protobuf:"bytes,3,opt,name=Data,json=data" json:"Data,omitempty"`
	Msgid    int32                   `protobuf:"zigzag32,4,opt,name=msgid" json:"msgid,omitempty"`
	Server   string                  `protobuf:"bytes,5,opt,name=server" json:"server,omitempty"`
	Serverid int32                   `protobuf:"zigzag32,6,opt,name=serverid" json:"serverid,omitempty"`
	Force    bool                    `protobuf:"varint,7,opt,name=force" json:"force,omitempty"`
}

func (m *MsgRanklistHandle) Reset()                    { *m = MsgRanklistHandle{} }
func (m *MsgRanklistHandle) String() string            { return proto.CompactTextString(m) }
func (*MsgRanklistHandle) ProtoMessage()               {}
func (*MsgRanklistHandle) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{15} }

func (m *MsgRanklistHandle) GetOper() MsgRanklistHandle_EOper {
	if m != nil {
		return m.Oper
	}
	return MsgRanklistHandle_Update
}

func (m *MsgRanklistHandle) GetType() ERankListType {
	if m != nil {
		return m.Type
	}
	return ERankListType_ERLT_PlayerLv
}

func (m *MsgRanklistHandle) GetData() *MsgRankListData {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *MsgRanklistHandle) GetMsgid() int32 {
	if m != nil {
		return m.Msgid
	}
	return 0
}

func (m *MsgRanklistHandle) GetServer() string {
	if m != nil {
		return m.Server
	}
	return ""
}

func (m *MsgRanklistHandle) GetServerid() int32 {
	if m != nil {
		return m.Serverid
	}
	return 0
}

func (m *MsgRanklistHandle) GetForce() bool {
	if m != nil {
		return m.Force
	}
	return false
}

func init() {
	proto.RegisterType((*CPriceItem)(nil), "pb.CPriceItem")
	proto.RegisterType((*MsgMail)(nil), "pb.MsgMail")
	proto.RegisterType((*MsgMailData)(nil), "pb.MsgMailData")
	proto.RegisterType((*MsgMailProto)(nil), "pb.MsgMailProto")
	proto.RegisterType((*MsgHero)(nil), "pb.MsgHero")
	proto.RegisterType((*MsgItem)(nil), "pb.MsgItem")
	proto.RegisterType((*MsgHeroUpReq)(nil), "pb.MsgHeroUpReq")
	proto.RegisterType((*MsgHeroStarUpReq)(nil), "pb.MsgHeroStarUpReq")
	proto.RegisterType((*MsgHeroPinJieUpReq)(nil), "pb.MsgHeroPinJieUpReq")
	proto.RegisterType((*MsgHeroProto)(nil), "pb.MsgHeroProto")
	proto.RegisterType((*MsgFBHistroy)(nil), "pb.MsgFBHistroy")
	proto.RegisterType((*MsgFBData)(nil), "pb.MsgFBData")
	proto.RegisterType((*MsgFormation)(nil), "pb.MsgFormation")
	proto.RegisterType((*MsgRankListData)(nil), "pb.MsgRankListData")
	proto.RegisterType((*MsgRankListPack)(nil), "pb.MsgRankListPack")
	proto.RegisterType((*MsgRanklistHandle)(nil), "pb.MsgRanklistHandle")
	proto.RegisterEnum("pb.ESpecialItem", ESpecialItem_name, ESpecialItem_value)
	proto.RegisterEnum("pb.EItemType", EItemType_name, EItemType_value)
	proto.RegisterEnum("pb.EMailState", EMailState_name, EMailState_value)
	proto.RegisterEnum("pb.EFBType", EFBType_name, EFBType_value)
	proto.RegisterEnum("pb.EFormationType", EFormationType_name, EFormationType_value)
	proto.RegisterEnum("pb.ERankListType", ERankListType_name, ERankListType_value)
	proto.RegisterEnum("pb.MsgMailProto_Operator", MsgMailProto_Operator_name, MsgMailProto_Operator_value)
	proto.RegisterEnum("pb.MsgHeroPinJieUpReq_PinJieUpType", MsgHeroPinJieUpReq_PinJieUpType_name, MsgHeroPinJieUpReq_PinJieUpType_value)
	proto.RegisterEnum("pb.MsgHeroProto_Operator", MsgHeroProto_Operator_name, MsgHeroProto_Operator_value)
	proto.RegisterEnum("pb.MsgRanklistHandle_EOper", MsgRanklistHandle_EOper_name, MsgRanklistHandle_EOper_value)
}

func init() { proto.RegisterFile("msg.proto", fileDescriptor3) }

var fileDescriptor3 = []byte{
	// 1218 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x56, 0xdb, 0x6e, 0xdb, 0x46,
	0x13, 0x36, 0x4f, 0xa2, 0x34, 0xb2, 0x14, 0x7a, 0x13, 0x04, 0x8a, 0x7f, 0xfc, 0x88, 0xc1, 0x34,
	0xa9, 0xeb, 0xa2, 0x2a, 0xe0, 0x06, 0x68, 0x91, 0xbb, 0xd8, 0x96, 0x63, 0x27, 0x76, 0x22, 0xac,
	0x6c, 0xa0, 0xe8, 0x45, 0x83, 0x8d, 0xb8, 0x91, 0x17, 0xa6, 0x48, 0x86, 0xa4, 0x84, 0xa8, 0x2f,
	0xd0, 0x07, 0xe8, 0x55, 0x7b, 0xd7, 0x17, 0x29, 0xd0, 0x37, 0x2b, 0x66, 0x76, 0x49, 0xd1, 0x69,
	0x52, 0xe4, 0x4a, 0x9c, 0xe3, 0x7e, 0xf3, 0xcd, 0xcc, 0xae, 0xa0, 0x33, 0x2f, 0x66, 0xc3, 0x2c,
	0x4f, 0xcb, 0x94, 0xd9, 0xd9, 0x9b, 0xf0, 0x0f, 0x0b, 0xe0, 0x70, 0x9c, 0xab, 0xa9, 0x3c, 0x2d,
	0xe5, 0x9c, 0x3d, 0x00, 0x6f, 0x5e, 0xae, 0x32, 0x39, 0xb0, 0x76, 0xac, 0xdd, 0xfe, 0x7e, 0x6f,
	0x98, 0xbd, 0x19, 0x8e, 0xd0, 0x72, 0xb1, 0xca, 0x24, 0xd7, 0x36, 0x36, 0x00, 0x3f, 0xcd, 0x55,
	0x22, 0xe6, 0x72, 0x60, 0xef, 0x58, 0xbb, 0x5b, 0xbc, 0x12, 0xd9, 0x1d, 0xf0, 0xa6, 0xe9, 0x22,
	0x29, 0x07, 0x0e, 0xe9, 0xb5, 0xc0, 0xee, 0x43, 0x57, 0x25, 0x89, 0xcc, 0x5f, 0x67, 0x22, 0x17,
	0xf3, 0x81, 0x4b, 0x36, 0x20, 0xd5, 0x18, 0x35, 0xec, 0x2e, 0xb4, 0xe4, 0x7b, 0x95, 0xbc, 0x4d,
	0x07, 0x1e, 0xd9, 0x8c, 0x14, 0xfe, 0x0c, 0xfe, 0x79, 0x31, 0x3b, 0x17, 0x2a, 0x66, 0x0c, 0xdc,
	0xcb, 0xcb, 0xd3, 0x23, 0xc2, 0xd5, 0xe1, 0xee, 0xe2, 0xf2, 0xf4, 0x88, 0x6d, 0x43, 0x9b, 0xa7,
	0xb1, 0x7c, 0xb6, 0x50, 0x11, 0x01, 0xe9, 0xf1, 0x76, 0x6e, 0x64, 0xf6, 0x00, 0xdc, 0x23, 0x51,
	0x0a, 0x02, 0xd2, 0xdd, 0xbf, 0x85, 0x75, 0x98, 0x54, 0xa8, 0xe6, 0x6e, 0x24, 0x4a, 0x11, 0xfe,
	0x6a, 0x41, 0xb7, 0xa1, 0x45, 0xf8, 0x87, 0x6f, 0x67, 0xe6, 0x94, 0x1e, 0xf7, 0xa6, 0x28, 0x20,
	0x3a, 0x82, 0x59, 0x0c, 0xec, 0x1d, 0x67, 0xb7, 0xc3, 0x5b, 0x54, 0x46, 0xc1, 0xbe, 0x00, 0x6f,
	0x9c, 0xab, 0x5f, 0xe4, 0xc0, 0xd9, 0x71, 0x76, 0xbb, 0xfb, 0x7d, 0x3c, 0x63, 0x4d, 0x25, 0xf7,
	0x32, 0x34, 0xa2, 0xd7, 0xa4, 0x14, 0xa5, 0xa4, 0xb2, 0xfb, 0xda, 0x6b, 0x84, 0x27, 0x92, 0x96,
	0x7b, 0x05, 0xfe, 0x84, 0x0b, 0xd8, 0x34, 0x40, 0xc6, 0xd4, 0x9a, 0xaf, 0xc0, 0x7e, 0x95, 0x99,
	0x26, 0xdc, 0x6b, 0x80, 0x27, 0xeb, 0xf0, 0x55, 0x26, 0x73, 0x51, 0xa6, 0x39, 0xb7, 0xd3, 0x8c,
	0x3d, 0x04, 0xff, 0x55, 0x22, 0xd1, 0x48, 0x24, 0x74, 0xf7, 0xbb, 0x0d, 0x7f, 0xee, 0xa7, 0xda,
	0x16, 0xde, 0x86, 0x76, 0x15, 0xc6, 0x7c, 0x70, 0x9e, 0x46, 0x51, 0xb0, 0x81, 0x04, 0x20, 0xc3,
	0x27, 0x32, 0x4f, 0xab, 0xe2, 0xa3, 0x66, 0xf1, 0x11, 0xf2, 0xde, 0xe0, 0xd7, 0x9d, 0x21, 0xb7,
	0x0c, 0xdc, 0x49, 0x29, 0x72, 0xe2, 0xb6, 0xc7, 0xdd, 0xa2, 0x14, 0x39, 0x91, 0xa4, 0x92, 0xe7,
	0x4a, 0xd7, 0xd9, 0xe3, 0xad, 0x8c, 0x24, 0xcc, 0x7a, 0x26, 0x97, 0x32, 0xa6, 0xce, 0xf6, 0xb8,
	0x17, 0xa3, 0xc0, 0x02, 0x70, 0x46, 0xef, 0xb3, 0x41, 0x8b, 0x74, 0x8e, 0x7c, 0x9f, 0x85, 0x5f,
	0x13, 0x10, 0x9a, 0xc1, 0x3e, 0xd8, 0x75, 0x0b, 0x6c, 0x75, 0x84, 0xce, 0x87, 0x49, 0x69, 0x10,
	0x38, 0xd3, 0xa4, 0x0c, 0x0f, 0x89, 0x2d, 0x44, 0x7d, 0x99, 0x71, 0xf9, 0xae, 0x06, 0x69, 0x35,
	0x40, 0xde, 0x07, 0xf7, 0x30, 0x2d, 0x4a, 0xea, 0xd9, 0x9a, 0x13, 0xea, 0x8c, 0x3b, 0x4d, 0x8b,
	0x32, 0x7c, 0x07, 0x81, 0x49, 0x82, 0xc5, 0x7c, 0x3a, 0xd1, 0x36, 0xb4, 0x31, 0x11, 0x3a, 0x52,
	0xb2, 0x1e, 0x6f, 0x4f, 0x8d, 0xcc, 0xbe, 0x81, 0xee, 0x24, 0x93, 0x53, 0xa9, 0x62, 0x3a, 0xcb,
	0xb9, 0xc1, 0x3f, 0x9d, 0xd5, 0x2d, 0xd6, 0xf6, 0xf0, 0x2f, 0x0b, 0x98, 0x39, 0x53, 0x93, 0xf5,
	0x39, 0xf0, 0xad, 0x8f, 0xc2, 0x67, 0xdf, 0x83, 0x8b, 0x3b, 0x49, 0x67, 0xf6, 0xf7, 0x1f, 0x18,
	0x87, 0x0f, 0x52, 0x0f, 0xab, 0x6f, 0x5a, 0x5f, 0x17, 0xb7, 0x37, 0x7c, 0x02, 0x9b, 0x4d, 0x2d,
	0x03, 0x68, 0xbd, 0x4c, 0xf3, 0xb9, 0x88, 0x83, 0x0d, 0xd6, 0x07, 0x98, 0x5c, 0xc9, 0x64, 0x36,
	0x56, 0xc9, 0x0b, 0x11, 0x58, 0x28, 0xff, 0x74, 0xa5, 0x48, 0xf5, 0x42, 0x04, 0x76, 0xf8, 0xb7,
	0x5d, 0x33, 0xff, 0xe9, 0x39, 0xad, 0xad, 0x37, 0xe7, 0xf4, 0x11, 0x78, 0x84, 0xc9, 0x94, 0x14,
	0x34, 0xbc, 0x49, 0xcf, 0xbd, 0x05, 0xb1, 0x31, 0x04, 0x1f, 0x1b, 0x82, 0x9e, 0x9a, 0xcf, 0x3b,
	0x0d, 0xcf, 0xba, 0x55, 0xdc, 0x2f, 0xb4, 0x13, 0x7b, 0x0c, 0x1d, 0x5d, 0x0f, 0x46, 0xb8, 0x14,
	0x71, 0xf7, 0xe3, 0x6c, 0xf0, 0x4e, 0x56, 0x39, 0x22, 0xbf, 0xd4, 0x51, 0xef, 0x06, 0xbf, 0xa8,
	0xe2, 0xee, 0x15, 0xb6, 0xb6, 0x6a, 0x4a, 0x6b, 0xdd, 0x94, 0xf0, 0xf0, 0x23, 0x3b, 0x84, 0x1f,
	0x47, 0x32, 0x0e, 0x2c, 0xd6, 0x05, 0x9f, 0x46, 0xfd, 0x32, 0x0b, 0x6c, 0x64, 0x55, 0x63, 0x0d,
	0x1c, 0xb6, 0x09, 0xed, 0x0a, 0x45, 0xe0, 0x86, 0x8f, 0x89, 0xc2, 0xe3, 0x83, 0x13, 0x55, 0x94,
	0x79, 0xba, 0xaa, 0xb7, 0xc9, 0x6a, 0x6c, 0xd3, 0xbf, 0x47, 0xfe, 0x4f, 0x0b, 0x3a, 0x14, 0x46,
	0x17, 0x15, 0xda, 0x17, 0x55, 0x88, 0x33, 0x5d, 0xe4, 0xec, 0x31, 0xf8, 0x26, 0xa1, 0x99, 0xf8,
	0x6d, 0x53, 0x92, 0x8e, 0x18, 0x1a, 0xe3, 0x28, 0x29, 0xf3, 0x15, 0xf7, 0xaf, 0xb4, 0xb4, 0x7d,
	0x06, 0x9b, 0x4d, 0x03, 0xe6, 0xbd, 0x96, 0xab, 0x2a, 0xef, 0xb5, 0x5c, 0x61, 0xd7, 0x96, 0x22,
	0x5e, 0xc8, 0x0f, 0xba, 0x56, 0xc3, 0xe7, 0xda, 0xfc, 0xc4, 0xfe, 0xc1, 0x0a, 0x1f, 0xe9, 0xca,
	0x70, 0x98, 0x4a, 0x95, 0x26, 0x78, 0x27, 0x20, 0xa1, 0xb4, 0xcc, 0xb8, 0x37, 0xad, 0x2b, 0x92,
	0xc2, 0xdf, 0x2d, 0xb8, 0x75, 0x5e, 0xcc, 0xb8, 0x48, 0xae, 0xcf, 0x54, 0x51, 0x52, 0x45, 0xb8,
	0xf4, 0x51, 0xbd, 0xf4, 0x11, 0xde, 0x1b, 0x93, 0x69, 0x9a, 0xeb, 0x73, 0x5d, 0xee, 0x15, 0x28,
	0x20, 0x57, 0x2f, 0xf1, 0xd9, 0x71, 0xf4, 0x2b, 0x50, 0xbd, 0x39, 0xfa, 0x86, 0x71, 0x9b, 0x37,
	0xcc, 0x36, 0xb4, 0x71, 0x06, 0x73, 0xa1, 0x4a, 0x73, 0xf5, 0xb4, 0x33, 0x23, 0xa3, 0xed, 0x69,
	0x1c, 0xaf, 0x28, 0x53, 0x8b, 0x32, 0xb5, 0x85, 0x91, 0xc3, 0xd5, 0x0d, 0x68, 0x63, 0x31, 0xbd,
	0x66, 0x0f, 0xcd, 0xa6, 0xe9, 0x29, 0xdf, 0xa2, 0x0b, 0xbc, 0x72, 0x58, 0xef, 0x15, 0xfb, 0xd2,
	0xbc, 0x38, 0x9a, 0xfe, 0xdb, 0x86, 0xa8, 0x66, 0x91, 0xfa, 0xd5, 0x41, 0x5a, 0xce, 0x57, 0xa8,
	0x37, 0xaf, 0x64, 0x6b, 0x4e, 0x52, 0xf8, 0x9b, 0x0d, 0x5b, 0x26, 0x22, 0x56, 0x45, 0x79, 0x22,
	0x92, 0x28, 0x96, 0xec, 0x5b, 0x70, 0x71, 0xe6, 0xcc, 0xe9, 0xff, 0x6b, 0xa4, 0x5d, 0x3b, 0x0d,
	0x47, 0xe8, 0xc2, 0xdd, 0x34, 0x93, 0x79, 0x0d, 0xd7, 0xfe, 0x3c, 0xb8, 0x7a, 0xc7, 0xfe, 0x03,
	0xee, 0x1d, 0xf0, 0xe6, 0xc5, 0x4c, 0x45, 0xe6, 0xdd, 0xd6, 0x02, 0x16, 0x51, 0xc8, 0x7c, 0x29,
	0x73, 0x62, 0xb7, 0xc3, 0x8d, 0x84, 0xdc, 0xea, 0x2f, 0xb3, 0x3a, 0x5b, 0xbc, 0x96, 0x31, 0xd3,
	0xdb, 0x34, 0x9f, 0xca, 0x81, 0xbf, 0x63, 0xed, 0xb6, 0xb9, 0x16, 0xc2, 0xff, 0x83, 0x47, 0xf0,
	0x71, 0x65, 0x2e, 0xb3, 0x48, 0x94, 0x32, 0xd8, 0x60, 0x6d, 0x70, 0x91, 0xfb, 0xc0, 0xda, 0xbb,
	0x07, 0x9b, 0x23, 0xbc, 0x63, 0x95, 0x88, 0xe9, 0x75, 0xe8, 0x80, 0xf7, 0x5c, 0x25, 0x07, 0x2a,
	0xd8, 0xd8, 0x4b, 0xa1, 0x53, 0xff, 0x37, 0xc1, 0x88, 0x97, 0x69, 0x82, 0xb1, 0x3d, 0xe8, 0x8c,
	0xde, 0x2d, 0x54, 0x36, 0x97, 0x49, 0x19, 0x58, 0x68, 0xc0, 0x29, 0x0c, 0x6c, 0xfc, 0x7a, 0x96,
	0xa6, 0x51, 0xe0, 0x60, 0x92, 0x49, 0x89, 0xde, 0xae, 0x36, 0x8b, 0x28, 0xf0, 0x30, 0x6e, 0x9c,
	0xab, 0xa5, 0x8a, 0xe5, 0x4c, 0x06, 0x2d, 0xb6, 0x05, 0xbd, 0x8b, 0x74, 0xf1, 0xa3, 0x12, 0xc9,
	0xec, 0xc5, 0x42, 0x24, 0xb3, 0xc0, 0xdf, 0x7b, 0x04, 0xb0, 0x7e, 0xba, 0x71, 0xdf, 0x47, 0xe7,
	0x93, 0xd3, 0x44, 0x95, 0xc1, 0x86, 0x11, 0xb8, 0x9c, 0x2e, 0x03, 0x6b, 0x6f, 0x00, 0xfe, 0xe8,
	0xf8, 0x80, 0x60, 0xf5, 0xa0, 0x73, 0x7c, 0x70, 0x51, 0x5d, 0xb0, 0x7b, 0xf7, 0xa1, 0x3f, 0xaa,
	0x17, 0xa4, 0x72, 0x18, 0x1d, 0x1f, 0xd4, 0x0e, 0x21, 0xf4, 0x6e, 0x74, 0x0b, 0x61, 0x8c, 0xf8,
	0xd9, 0xc5, 0xeb, 0x71, 0x2c, 0x56, 0x32, 0x3f, 0x5b, 0x06, 0x1b, 0x07, 0xf6, 0x89, 0xf3, 0xa6,
	0x45, 0x7f, 0xe1, 0xbe, 0xfb, 0x27, 0x00, 0x00, 0xff, 0xff, 0x5a, 0x46, 0xc3, 0x9d, 0xcf, 0x09,
	0x00, 0x00,
}
