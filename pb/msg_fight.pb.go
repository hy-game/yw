// Code generated by protoc-gen-go. DO NOT EDIT.
// source: msg_fight.proto

package pb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type AttrType int32

const (
	// --------------注意顺序，配置时也要使用这个顺序----------
	AttrType_AtkPhy           AttrType = 0
	AttrType_AtkMagic         AttrType = 1
	AttrType_DefPhy           AttrType = 2
	AttrType_DefMagic         AttrType = 3
	AttrType_InitHp           AttrType = 4
	AttrType_Crit             AttrType = 5
	AttrType_CritRate         AttrType = 6
	AttrType_CDSuoJian        AttrType = 7
	AttrType_AtkSpeed         AttrType = 8
	AttrType_ChuanTou         AttrType = 9
	AttrType_ShangHaiJiaShen  AttrType = 10
	AttrType_DefCrit          AttrType = 11
	AttrType_Miss             AttrType = 12
	AttrType_ShangHaiJianMian AttrType = 13
	AttrType_MianKong         AttrType = 14
	AttrType_MoveSpeed        AttrType = 15
	AttrType_AtkHuo           AttrType = 16
	AttrType_AtkFeng          AttrType = 17
	AttrType_AttrMax          AttrType = 18
)

var AttrType_name = map[int32]string{
	0:  "AtkPhy",
	1:  "AtkMagic",
	2:  "DefPhy",
	3:  "DefMagic",
	4:  "InitHp",
	5:  "Crit",
	6:  "CritRate",
	7:  "CDSuoJian",
	8:  "AtkSpeed",
	9:  "ChuanTou",
	10: "ShangHaiJiaShen",
	11: "DefCrit",
	12: "Miss",
	13: "ShangHaiJianMian",
	14: "MianKong",
	15: "MoveSpeed",
	16: "AtkHuo",
	17: "AtkFeng",
	18: "AttrMax",
}
var AttrType_value = map[string]int32{
	"AtkPhy":           0,
	"AtkMagic":         1,
	"DefPhy":           2,
	"DefMagic":         3,
	"InitHp":           4,
	"Crit":             5,
	"CritRate":         6,
	"CDSuoJian":        7,
	"AtkSpeed":         8,
	"ChuanTou":         9,
	"ShangHaiJiaShen":  10,
	"DefCrit":          11,
	"Miss":             12,
	"ShangHaiJianMian": 13,
	"MianKong":         14,
	"MoveSpeed":        15,
	"AtkHuo":           16,
	"AtkFeng":          17,
	"AttrMax":          18,
}

func (x AttrType) String() string {
	return proto.EnumName(AttrType_name, int32(x))
}
func (AttrType) EnumDescriptor() ([]byte, []int) { return fileDescriptor9, []int{0} }

// 战斗单位的状态
type EFighterState int32

const (
	EFighterState_FS_None       EFighterState = 0
	EFighterState_FS_Idle       EFighterState = 1
	EFighterState_FS_Move       EFighterState = 2
	EFighterState_FS_Attack     EFighterState = 3
	EFighterState_FS_BeHit      EFighterState = 4
	EFighterState_FS_Abnormal   EFighterState = 5
	EFighterState_FS_Navigation EFighterState = 6
	EFighterState_FS_Dead       EFighterState = 7
	EFighterState_FS_Victory    EFighterState = 8
)

var EFighterState_name = map[int32]string{
	0: "FS_None",
	1: "FS_Idle",
	2: "FS_Move",
	3: "FS_Attack",
	4: "FS_BeHit",
	5: "FS_Abnormal",
	6: "FS_Navigation",
	7: "FS_Dead",
	8: "FS_Victory",
}
var EFighterState_value = map[string]int32{
	"FS_None":       0,
	"FS_Idle":       1,
	"FS_Move":       2,
	"FS_Attack":     3,
	"FS_BeHit":      4,
	"FS_Abnormal":   5,
	"FS_Navigation": 6,
	"FS_Dead":       7,
	"FS_Victory":    8,
}

func (x EFighterState) String() string {
	return proto.EnumName(EFighterState_name, int32(x))
}
func (EFighterState) EnumDescriptor() ([]byte, []int) { return fileDescriptor9, []int{1} }

// 战斗单位的状态切换事件
type EFighterStateEvent int32

const (
	EFighterStateEvent_FSE_None        EFighterStateEvent = 0
	EFighterStateEvent_FSE_TargetState EFighterStateEvent = 1
)

var EFighterStateEvent_name = map[int32]string{
	0: "FSE_None",
	1: "FSE_TargetState",
}
var EFighterStateEvent_value = map[string]int32{
	"FSE_None":        0,
	"FSE_TargetState": 1,
}

func (x EFighterStateEvent) String() string {
	return proto.EnumName(EFighterStateEvent_name, int32(x))
}
func (EFighterStateEvent) EnumDescriptor() ([]byte, []int) { return fileDescriptor9, []int{2} }

type MsgFighter struct {
	ID      uint32   `protobuf:"varint,1,opt,name=ID,json=iD" json:"ID,omitempty"`
	Guid    uint32   `protobuf:"varint,2,opt,name=Guid,json=guid" json:"Guid,omitempty"`
	Attrs   []uint32 `protobuf:"varint,3,rep,packed,name=Attrs,json=attrs" json:"Attrs,omitempty"`
	Hp      uint32   `protobuf:"varint,5,opt,name=Hp,json=hp" json:"Hp,omitempty"`
	MaxHp   uint32   `protobuf:"varint,6,opt,name=MaxHp,json=maxHp" json:"MaxHp,omitempty"`
	PosX    int32    `protobuf:"varint,8,opt,name=PosX,json=posX" json:"PosX,omitempty"`
	PosY    int32    `protobuf:"varint,9,opt,name=PosY,json=posY" json:"PosY,omitempty"`
	PosZ    int32    `protobuf:"varint,10,opt,name=PosZ,json=posZ" json:"PosZ,omitempty"`
	Yaw     int32    `protobuf:"varint,11,opt,name=Yaw,json=yaw" json:"Yaw,omitempty"`
	Visible bool     `protobuf:"varint,12,opt,name=Visible,json=visible" json:"Visible,omitempty"`
	// to be del
	Atk   uint32 `protobuf:"varint,20,opt,name=Atk,json=atk" json:"Atk,omitempty"`
	Def   uint32 `protobuf:"varint,21,opt,name=Def,json=def" json:"Def,omitempty"`
	Speed uint32 `protobuf:"varint,22,opt,name=Speed,json=speed" json:"Speed,omitempty"`
}

func (m *MsgFighter) Reset()                    { *m = MsgFighter{} }
func (m *MsgFighter) String() string            { return proto.CompactTextString(m) }
func (*MsgFighter) ProtoMessage()               {}
func (*MsgFighter) Descriptor() ([]byte, []int) { return fileDescriptor9, []int{0} }

func (m *MsgFighter) GetID() uint32 {
	if m != nil {
		return m.ID
	}
	return 0
}

func (m *MsgFighter) GetGuid() uint32 {
	if m != nil {
		return m.Guid
	}
	return 0
}

func (m *MsgFighter) GetAttrs() []uint32 {
	if m != nil {
		return m.Attrs
	}
	return nil
}

func (m *MsgFighter) GetHp() uint32 {
	if m != nil {
		return m.Hp
	}
	return 0
}

func (m *MsgFighter) GetMaxHp() uint32 {
	if m != nil {
		return m.MaxHp
	}
	return 0
}

func (m *MsgFighter) GetPosX() int32 {
	if m != nil {
		return m.PosX
	}
	return 0
}

func (m *MsgFighter) GetPosY() int32 {
	if m != nil {
		return m.PosY
	}
	return 0
}

func (m *MsgFighter) GetPosZ() int32 {
	if m != nil {
		return m.PosZ
	}
	return 0
}

func (m *MsgFighter) GetYaw() int32 {
	if m != nil {
		return m.Yaw
	}
	return 0
}

func (m *MsgFighter) GetVisible() bool {
	if m != nil {
		return m.Visible
	}
	return false
}

func (m *MsgFighter) GetAtk() uint32 {
	if m != nil {
		return m.Atk
	}
	return 0
}

func (m *MsgFighter) GetDef() uint32 {
	if m != nil {
		return m.Def
	}
	return 0
}

func (m *MsgFighter) GetSpeed() uint32 {
	if m != nil {
		return m.Speed
	}
	return 0
}

type MsgFighterCli struct {
	ID    uint32 `protobuf:"varint,1,opt,name=ID,json=iD" json:"ID,omitempty"`
	Guid  uint32 `protobuf:"varint,2,opt,name=Guid,json=guid" json:"Guid,omitempty"`
	Hp    uint32 `protobuf:"varint,3,opt,name=Hp,json=hp" json:"Hp,omitempty"`
	MaxHp uint32 `protobuf:"varint,4,opt,name=MaxHp,json=maxHp" json:"MaxHp,omitempty"`
}

func (m *MsgFighterCli) Reset()                    { *m = MsgFighterCli{} }
func (m *MsgFighterCli) String() string            { return proto.CompactTextString(m) }
func (*MsgFighterCli) ProtoMessage()               {}
func (*MsgFighterCli) Descriptor() ([]byte, []int) { return fileDescriptor9, []int{1} }

func (m *MsgFighterCli) GetID() uint32 {
	if m != nil {
		return m.ID
	}
	return 0
}

func (m *MsgFighterCli) GetGuid() uint32 {
	if m != nil {
		return m.Guid
	}
	return 0
}

func (m *MsgFighterCli) GetHp() uint32 {
	if m != nil {
		return m.Hp
	}
	return 0
}

func (m *MsgFighterCli) GetMaxHp() uint32 {
	if m != nil {
		return m.MaxHp
	}
	return 0
}

type MsgRoleInFight struct {
	SesID    uint32        `protobuf:"varint,1,opt,name=SesID,json=sesID" json:"SesID,omitempty"`
	Acc      string        `protobuf:"bytes,2,opt,name=Acc,json=acc" json:"Acc,omitempty"`
	Guid     uint32        `protobuf:"varint,3,opt,name=Guid,json=guid" json:"Guid,omitempty"`
	Token    string        `protobuf:"bytes,4,opt,name=Token,json=token" json:"Token,omitempty"`
	Fighters []*MsgFighter `protobuf:"bytes,5,rep,name=Fighters,json=fighters" json:"Fighters,omitempty"`
	ServerID uint32        `protobuf:"varint,6,opt,name=ServerID,json=serverID" json:"ServerID,omitempty"`
}

func (m *MsgRoleInFight) Reset()                    { *m = MsgRoleInFight{} }
func (m *MsgRoleInFight) String() string            { return proto.CompactTextString(m) }
func (*MsgRoleInFight) ProtoMessage()               {}
func (*MsgRoleInFight) Descriptor() ([]byte, []int) { return fileDescriptor9, []int{2} }

func (m *MsgRoleInFight) GetSesID() uint32 {
	if m != nil {
		return m.SesID
	}
	return 0
}

func (m *MsgRoleInFight) GetAcc() string {
	if m != nil {
		return m.Acc
	}
	return ""
}

func (m *MsgRoleInFight) GetGuid() uint32 {
	if m != nil {
		return m.Guid
	}
	return 0
}

func (m *MsgRoleInFight) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *MsgRoleInFight) GetFighters() []*MsgFighter {
	if m != nil {
		return m.Fighters
	}
	return nil
}

func (m *MsgRoleInFight) GetServerID() uint32 {
	if m != nil {
		return m.ServerID
	}
	return 0
}

type MsgRegionInfo struct {
	Fighters []*MsgFighterCli `protobuf:"bytes,1,rep,name=Fighters,json=fighters" json:"Fighters,omitempty"`
}

func (m *MsgRegionInfo) Reset()                    { *m = MsgRegionInfo{} }
func (m *MsgRegionInfo) String() string            { return proto.CompactTextString(m) }
func (*MsgRegionInfo) ProtoMessage()               {}
func (*MsgRegionInfo) Descriptor() ([]byte, []int) { return fileDescriptor9, []int{3} }

func (m *MsgRegionInfo) GetFighters() []*MsgFighterCli {
	if m != nil {
		return m.Fighters
	}
	return nil
}

type MsgBattleStartData struct {
	BattleID           uint32            `protobuf:"varint,1,opt,name=BattleID,json=battleID" json:"BattleID,omitempty"`
	BattleGuid         uint32            `protobuf:"varint,2,opt,name=BattleGuid,json=battleGuid" json:"BattleGuid,omitempty"`
	BattleCreateServer uint32            `protobuf:"varint,3,opt,name=BattleCreateServer,json=battleCreateServer" json:"BattleCreateServer,omitempty"`
	FtID               uint32            `protobuf:"varint,4,opt,name=FtID,json=ftID" json:"FtID,omitempty"`
	Token              string            `protobuf:"bytes,5,opt,name=Token,json=token" json:"Token,omitempty"`
	Roles              []*MsgRoleInFight `protobuf:"bytes,6,rep,name=Roles,json=roles" json:"Roles,omitempty"`
	BattleDifficulty   uint32            `protobuf:"varint,7,opt,name=BattleDifficulty,json=battleDifficulty" json:"BattleDifficulty,omitempty"`
}

func (m *MsgBattleStartData) Reset()                    { *m = MsgBattleStartData{} }
func (m *MsgBattleStartData) String() string            { return proto.CompactTextString(m) }
func (*MsgBattleStartData) ProtoMessage()               {}
func (*MsgBattleStartData) Descriptor() ([]byte, []int) { return fileDescriptor9, []int{4} }

func (m *MsgBattleStartData) GetBattleID() uint32 {
	if m != nil {
		return m.BattleID
	}
	return 0
}

func (m *MsgBattleStartData) GetBattleGuid() uint32 {
	if m != nil {
		return m.BattleGuid
	}
	return 0
}

func (m *MsgBattleStartData) GetBattleCreateServer() uint32 {
	if m != nil {
		return m.BattleCreateServer
	}
	return 0
}

func (m *MsgBattleStartData) GetFtID() uint32 {
	if m != nil {
		return m.FtID
	}
	return 0
}

func (m *MsgBattleStartData) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *MsgBattleStartData) GetRoles() []*MsgRoleInFight {
	if m != nil {
		return m.Roles
	}
	return nil
}

func (m *MsgBattleStartData) GetBattleDifficulty() uint32 {
	if m != nil {
		return m.BattleDifficulty
	}
	return 0
}

type MsgBattleFinishData struct {
	Winner     uint32        `protobuf:"varint,1,opt,name=Winner,json=winner" json:"Winner,omitempty"`
	Items      []*CPriceItem `protobuf:"bytes,2,rep,name=Items,json=items" json:"Items,omitempty"`
	Guid       uint32        `protobuf:"varint,3,opt,name=Guid,json=guid" json:"Guid,omitempty"`
	BattleID   uint32        `protobuf:"varint,4,opt,name=BattleID,json=battleID" json:"BattleID,omitempty"`
	BattleGuid uint32        `protobuf:"varint,5,opt,name=BattleGuid,json=battleGuid" json:"BattleGuid,omitempty"`
}

func (m *MsgBattleFinishData) Reset()                    { *m = MsgBattleFinishData{} }
func (m *MsgBattleFinishData) String() string            { return proto.CompactTextString(m) }
func (*MsgBattleFinishData) ProtoMessage()               {}
func (*MsgBattleFinishData) Descriptor() ([]byte, []int) { return fileDescriptor9, []int{5} }

func (m *MsgBattleFinishData) GetWinner() uint32 {
	if m != nil {
		return m.Winner
	}
	return 0
}

func (m *MsgBattleFinishData) GetItems() []*CPriceItem {
	if m != nil {
		return m.Items
	}
	return nil
}

func (m *MsgBattleFinishData) GetGuid() uint32 {
	if m != nil {
		return m.Guid
	}
	return 0
}

func (m *MsgBattleFinishData) GetBattleID() uint32 {
	if m != nil {
		return m.BattleID
	}
	return 0
}

func (m *MsgBattleFinishData) GetBattleGuid() uint32 {
	if m != nil {
		return m.BattleGuid
	}
	return 0
}

// 战斗丢失：通知你有一场战斗
type MsgBattleYouLost struct {
	BattleID   uint32 `protobuf:"varint,1,opt,name=BattleID,json=battleID" json:"BattleID,omitempty"`
	BattleGuid uint32 `protobuf:"varint,2,opt,name=BattleGuid,json=battleGuid" json:"BattleGuid,omitempty"`
}

func (m *MsgBattleYouLost) Reset()                    { *m = MsgBattleYouLost{} }
func (m *MsgBattleYouLost) String() string            { return proto.CompactTextString(m) }
func (*MsgBattleYouLost) ProtoMessage()               {}
func (*MsgBattleYouLost) Descriptor() ([]byte, []int) { return fileDescriptor9, []int{6} }

func (m *MsgBattleYouLost) GetBattleID() uint32 {
	if m != nil {
		return m.BattleID
	}
	return 0
}

func (m *MsgBattleYouLost) GetBattleGuid() uint32 {
	if m != nil {
		return m.BattleGuid
	}
	return 0
}

// 创建战斗：服务器上房间创建(收到MsgBattleStartData，客户端读图)
type MsgBattleCreateByRoom struct {
	RoomID   uint32              `protobuf:"varint,1,opt,name=RoomID,json=roomID" json:"RoomID,omitempty"`
	RoomGuid uint32              `protobuf:"varint,2,opt,name=RoomGuid,json=roomGuid" json:"RoomGuid,omitempty"`
	BtStart  *MsgBattleStartData `protobuf:"bytes,3,opt,name=BtStart,json=btStart" json:"BtStart,omitempty"`
}

func (m *MsgBattleCreateByRoom) Reset()                    { *m = MsgBattleCreateByRoom{} }
func (m *MsgBattleCreateByRoom) String() string            { return proto.CompactTextString(m) }
func (*MsgBattleCreateByRoom) ProtoMessage()               {}
func (*MsgBattleCreateByRoom) Descriptor() ([]byte, []int) { return fileDescriptor9, []int{7} }

func (m *MsgBattleCreateByRoom) GetRoomID() uint32 {
	if m != nil {
		return m.RoomID
	}
	return 0
}

func (m *MsgBattleCreateByRoom) GetRoomGuid() uint32 {
	if m != nil {
		return m.RoomGuid
	}
	return 0
}

func (m *MsgBattleCreateByRoom) GetBtStart() *MsgBattleStartData {
	if m != nil {
		return m.BtStart
	}
	return nil
}

// 创建战斗：客户端端自己创建
type MsgBattleCreateReq struct {
	BattleID         uint32   `protobuf:"varint,1,opt,name=BattleID,json=battleID" json:"BattleID,omitempty"`
	Fighters         []uint32 `protobuf:"varint,2,rep,packed,name=Fighters,json=fighters" json:"Fighters,omitempty"`
	BattleDifficulty uint32   `protobuf:"varint,3,opt,name=BattleDifficulty,json=battleDifficulty" json:"BattleDifficulty,omitempty"`
}

func (m *MsgBattleCreateReq) Reset()                    { *m = MsgBattleCreateReq{} }
func (m *MsgBattleCreateReq) String() string            { return proto.CompactTextString(m) }
func (*MsgBattleCreateReq) ProtoMessage()               {}
func (*MsgBattleCreateReq) Descriptor() ([]byte, []int) { return fileDescriptor9, []int{8} }

func (m *MsgBattleCreateReq) GetBattleID() uint32 {
	if m != nil {
		return m.BattleID
	}
	return 0
}

func (m *MsgBattleCreateReq) GetFighters() []uint32 {
	if m != nil {
		return m.Fighters
	}
	return nil
}

func (m *MsgBattleCreateReq) GetBattleDifficulty() uint32 {
	if m != nil {
		return m.BattleDifficulty
	}
	return 0
}

// 创建战斗：客户端端自己创建(收到MsgBattleStartData，客户端读图)
type MsgBattleCreateAck struct {
	BtStart *MsgBattleStartData `protobuf:"bytes,1,opt,name=BtStart,json=btStart" json:"BtStart,omitempty"`
	Guid    uint32              `protobuf:"varint,2,opt,name=Guid,json=guid" json:"Guid,omitempty"`
}

func (m *MsgBattleCreateAck) Reset()                    { *m = MsgBattleCreateAck{} }
func (m *MsgBattleCreateAck) String() string            { return proto.CompactTextString(m) }
func (*MsgBattleCreateAck) ProtoMessage()               {}
func (*MsgBattleCreateAck) Descriptor() ([]byte, []int) { return fileDescriptor9, []int{9} }

func (m *MsgBattleCreateAck) GetBtStart() *MsgBattleStartData {
	if m != nil {
		return m.BtStart
	}
	return nil
}

func (m *MsgBattleCreateAck) GetGuid() uint32 {
	if m != nil {
		return m.Guid
	}
	return 0
}

// 重连战斗：客户端重连战斗
type MsgBattleReConnectReq struct {
	BattleID   uint32 `protobuf:"varint,1,opt,name=BattleID,json=battleID" json:"BattleID,omitempty"`
	BattleGuid uint32 `protobuf:"varint,2,opt,name=BattleGuid,json=battleGuid" json:"BattleGuid,omitempty"`
}

func (m *MsgBattleReConnectReq) Reset()                    { *m = MsgBattleReConnectReq{} }
func (m *MsgBattleReConnectReq) String() string            { return proto.CompactTextString(m) }
func (*MsgBattleReConnectReq) ProtoMessage()               {}
func (*MsgBattleReConnectReq) Descriptor() ([]byte, []int) { return fileDescriptor9, []int{10} }

func (m *MsgBattleReConnectReq) GetBattleID() uint32 {
	if m != nil {
		return m.BattleID
	}
	return 0
}

func (m *MsgBattleReConnectReq) GetBattleGuid() uint32 {
	if m != nil {
		return m.BattleGuid
	}
	return 0
}

// 重连战斗：客户端重连战斗(收到MsgBattleStartData，客户端读图)
type MsgBattleReConnectAck struct {
	BtStart *MsgBattleStartData `protobuf:"bytes,1,opt,name=BtStart,json=btStart" json:"BtStart,omitempty"`
}

func (m *MsgBattleReConnectAck) Reset()                    { *m = MsgBattleReConnectAck{} }
func (m *MsgBattleReConnectAck) String() string            { return proto.CompactTextString(m) }
func (*MsgBattleReConnectAck) ProtoMessage()               {}
func (*MsgBattleReConnectAck) Descriptor() ([]byte, []int) { return fileDescriptor9, []int{11} }

func (m *MsgBattleReConnectAck) GetBtStart() *MsgBattleStartData {
	if m != nil {
		return m.BtStart
	}
	return nil
}

// 进入战斗请求(读图完成)
type MsgBattleEnterReq struct {
	Guid       uint32 `protobuf:"varint,1,opt,name=Guid,json=guid" json:"Guid,omitempty"`
	BattleGuid uint32 `protobuf:"varint,2,opt,name=BattleGuid,json=battleGuid" json:"BattleGuid,omitempty"`
	FtID       uint32 `protobuf:"varint,3,opt,name=FtID,json=ftID" json:"FtID,omitempty"`
	Token      string `protobuf:"bytes,4,opt,name=Token,json=token" json:"Token,omitempty"`
	CliTime    uint32 `protobuf:"varint,5,opt,name=CliTime,json=cliTime" json:"CliTime,omitempty"`
}

func (m *MsgBattleEnterReq) Reset()                    { *m = MsgBattleEnterReq{} }
func (m *MsgBattleEnterReq) String() string            { return proto.CompactTextString(m) }
func (*MsgBattleEnterReq) ProtoMessage()               {}
func (*MsgBattleEnterReq) Descriptor() ([]byte, []int) { return fileDescriptor9, []int{12} }

func (m *MsgBattleEnterReq) GetGuid() uint32 {
	if m != nil {
		return m.Guid
	}
	return 0
}

func (m *MsgBattleEnterReq) GetBattleGuid() uint32 {
	if m != nil {
		return m.BattleGuid
	}
	return 0
}

func (m *MsgBattleEnterReq) GetFtID() uint32 {
	if m != nil {
		return m.FtID
	}
	return 0
}

func (m *MsgBattleEnterReq) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *MsgBattleEnterReq) GetCliTime() uint32 {
	if m != nil {
		return m.CliTime
	}
	return 0
}

// 进入战斗返回
type MsgBattleEnterAck struct {
	RetCode uint32   `protobuf:"varint,1,opt,name=RetCode,json=retCode" json:"RetCode,omitempty"`
	Roles   []uint32 `protobuf:"varint,2,rep,packed,name=Roles,json=roles" json:"Roles,omitempty"`
}

func (m *MsgBattleEnterAck) Reset()                    { *m = MsgBattleEnterAck{} }
func (m *MsgBattleEnterAck) String() string            { return proto.CompactTextString(m) }
func (*MsgBattleEnterAck) ProtoMessage()               {}
func (*MsgBattleEnterAck) Descriptor() ([]byte, []int) { return fileDescriptor9, []int{13} }

func (m *MsgBattleEnterAck) GetRetCode() uint32 {
	if m != nil {
		return m.RetCode
	}
	return 0
}

func (m *MsgBattleEnterAck) GetRoles() []uint32 {
	if m != nil {
		return m.Roles
	}
	return nil
}

// 离开战斗请求
type MsgBattleLeaveReq struct {
	Guid       uint32 `protobuf:"varint,1,opt,name=Guid,json=guid" json:"Guid,omitempty"`
	BattleGuid uint32 `protobuf:"varint,2,opt,name=BattleGuid,json=battleGuid" json:"BattleGuid,omitempty"`
	FtID       uint32 `protobuf:"varint,3,opt,name=FtID,json=ftID" json:"FtID,omitempty"`
	Token      string `protobuf:"bytes,4,opt,name=Token,json=token" json:"Token,omitempty"`
	CliTime    uint32 `protobuf:"varint,5,opt,name=CliTime,json=cliTime" json:"CliTime,omitempty"`
	CloseType  uint32 `protobuf:"varint,6,opt,name=CloseType,json=closeType" json:"CloseType,omitempty"`
	Winner     uint32 `protobuf:"varint,7,opt,name=Winner,json=winner" json:"Winner,omitempty"`
}

func (m *MsgBattleLeaveReq) Reset()                    { *m = MsgBattleLeaveReq{} }
func (m *MsgBattleLeaveReq) String() string            { return proto.CompactTextString(m) }
func (*MsgBattleLeaveReq) ProtoMessage()               {}
func (*MsgBattleLeaveReq) Descriptor() ([]byte, []int) { return fileDescriptor9, []int{14} }

func (m *MsgBattleLeaveReq) GetGuid() uint32 {
	if m != nil {
		return m.Guid
	}
	return 0
}

func (m *MsgBattleLeaveReq) GetBattleGuid() uint32 {
	if m != nil {
		return m.BattleGuid
	}
	return 0
}

func (m *MsgBattleLeaveReq) GetFtID() uint32 {
	if m != nil {
		return m.FtID
	}
	return 0
}

func (m *MsgBattleLeaveReq) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *MsgBattleLeaveReq) GetCliTime() uint32 {
	if m != nil {
		return m.CliTime
	}
	return 0
}

func (m *MsgBattleLeaveReq) GetCloseType() uint32 {
	if m != nil {
		return m.CloseType
	}
	return 0
}

func (m *MsgBattleLeaveReq) GetWinner() uint32 {
	if m != nil {
		return m.Winner
	}
	return 0
}

// 离开战斗返回
type MsgBattleLeaveAck struct {
	RetCode uint32 `protobuf:"varint,1,opt,name=RetCode,json=retCode" json:"RetCode,omitempty"`
}

func (m *MsgBattleLeaveAck) Reset()                    { *m = MsgBattleLeaveAck{} }
func (m *MsgBattleLeaveAck) String() string            { return proto.CompactTextString(m) }
func (*MsgBattleLeaveAck) ProtoMessage()               {}
func (*MsgBattleLeaveAck) Descriptor() ([]byte, []int) { return fileDescriptor9, []int{15} }

func (m *MsgBattleLeaveAck) GetRetCode() uint32 {
	if m != nil {
		return m.RetCode
	}
	return 0
}

// 收到战斗开始
type MsgBattleStart struct {
	BattleGuid   uint32                      `protobuf:"varint,1,opt,name=BattleGuid,json=battleGuid" json:"BattleGuid,omitempty"`
	SrvStartTime uint32                      `protobuf:"varint,2,opt,name=SrvStartTime,json=srvStartTime" json:"SrvStartTime,omitempty"`
	SrcReadyTime uint32                      `protobuf:"varint,3,opt,name=SrcReadyTime,json=srcReadyTime" json:"SrcReadyTime,omitempty"`
	CliReadyTime uint32                      `protobuf:"varint,4,opt,name=CliReadyTime,json=cliReadyTime" json:"CliReadyTime,omitempty"`
	Roles        []*MsgRoleInFight           `protobuf:"bytes,5,rep,name=Roles,json=roles" json:"Roles,omitempty"`
	TriggerIDs   []uint32                    `protobuf:"varint,6,rep,packed,name=TriggerIDs,json=triggerIDs" json:"TriggerIDs,omitempty"`
	AreaScripts  []*MsgBattleAreaScriptStart `protobuf:"bytes,7,rep,name=AreaScripts,json=areaScripts" json:"AreaScripts,omitempty"`
}

func (m *MsgBattleStart) Reset()                    { *m = MsgBattleStart{} }
func (m *MsgBattleStart) String() string            { return proto.CompactTextString(m) }
func (*MsgBattleStart) ProtoMessage()               {}
func (*MsgBattleStart) Descriptor() ([]byte, []int) { return fileDescriptor9, []int{16} }

func (m *MsgBattleStart) GetBattleGuid() uint32 {
	if m != nil {
		return m.BattleGuid
	}
	return 0
}

func (m *MsgBattleStart) GetSrvStartTime() uint32 {
	if m != nil {
		return m.SrvStartTime
	}
	return 0
}

func (m *MsgBattleStart) GetSrcReadyTime() uint32 {
	if m != nil {
		return m.SrcReadyTime
	}
	return 0
}

func (m *MsgBattleStart) GetCliReadyTime() uint32 {
	if m != nil {
		return m.CliReadyTime
	}
	return 0
}

func (m *MsgBattleStart) GetRoles() []*MsgRoleInFight {
	if m != nil {
		return m.Roles
	}
	return nil
}

func (m *MsgBattleStart) GetTriggerIDs() []uint32 {
	if m != nil {
		return m.TriggerIDs
	}
	return nil
}

func (m *MsgBattleStart) GetAreaScripts() []*MsgBattleAreaScriptStart {
	if m != nil {
		return m.AreaScripts
	}
	return nil
}

// 收到战斗结束
type MsgBattleFinish struct {
	BtFinish *MsgBattleFinishData `protobuf:"bytes,1,opt,name=BtFinish,json=btFinish" json:"BtFinish,omitempty"`
}

func (m *MsgBattleFinish) Reset()                    { *m = MsgBattleFinish{} }
func (m *MsgBattleFinish) String() string            { return proto.CompactTextString(m) }
func (*MsgBattleFinish) ProtoMessage()               {}
func (*MsgBattleFinish) Descriptor() ([]byte, []int) { return fileDescriptor9, []int{17} }

func (m *MsgBattleFinish) GetBtFinish() *MsgBattleFinishData {
	if m != nil {
		return m.BtFinish
	}
	return nil
}

//
type MsgBattlePhySync struct {
	PosX           int32 `protobuf:"varint,1,opt,name=PosX,json=posX" json:"PosX,omitempty"`
	PosY           int32 `protobuf:"varint,2,opt,name=PosY,json=posY" json:"PosY,omitempty"`
	PosZ           int32 `protobuf:"varint,3,opt,name=PosZ,json=posZ" json:"PosZ,omitempty"`
	Yaw            int32 `protobuf:"varint,4,opt,name=Yaw,json=yaw" json:"Yaw,omitempty"`
	SyncImmdiately bool  `protobuf:"varint,5,opt,name=SyncImmdiately,json=syncImmdiately" json:"SyncImmdiately,omitempty"`
}

func (m *MsgBattlePhySync) Reset()                    { *m = MsgBattlePhySync{} }
func (m *MsgBattlePhySync) String() string            { return proto.CompactTextString(m) }
func (*MsgBattlePhySync) ProtoMessage()               {}
func (*MsgBattlePhySync) Descriptor() ([]byte, []int) { return fileDescriptor9, []int{18} }

func (m *MsgBattlePhySync) GetPosX() int32 {
	if m != nil {
		return m.PosX
	}
	return 0
}

func (m *MsgBattlePhySync) GetPosY() int32 {
	if m != nil {
		return m.PosY
	}
	return 0
}

func (m *MsgBattlePhySync) GetPosZ() int32 {
	if m != nil {
		return m.PosZ
	}
	return 0
}

func (m *MsgBattlePhySync) GetYaw() int32 {
	if m != nil {
		return m.Yaw
	}
	return 0
}

func (m *MsgBattlePhySync) GetSyncImmdiately() bool {
	if m != nil {
		return m.SyncImmdiately
	}
	return false
}

//
type MsgBattleScript struct {
	ID    uint32 `protobuf:"varint,1,opt,name=ID,json=iD" json:"ID,omitempty"`
	Path  string `protobuf:"bytes,2,opt,name=Path,json=path" json:"Path,omitempty"`
	Param string `protobuf:"bytes,3,opt,name=Param,json=param" json:"Param,omitempty"`
}

func (m *MsgBattleScript) Reset()                    { *m = MsgBattleScript{} }
func (m *MsgBattleScript) String() string            { return proto.CompactTextString(m) }
func (*MsgBattleScript) ProtoMessage()               {}
func (*MsgBattleScript) Descriptor() ([]byte, []int) { return fileDescriptor9, []int{19} }

func (m *MsgBattleScript) GetID() uint32 {
	if m != nil {
		return m.ID
	}
	return 0
}

func (m *MsgBattleScript) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

func (m *MsgBattleScript) GetParam() string {
	if m != nil {
		return m.Param
	}
	return ""
}

type MsgBattleScriptList struct {
	Type    string             `protobuf:"bytes,1,opt,name=Type,json=type" json:"Type,omitempty"`
	Scripts []*MsgBattleScript `protobuf:"bytes,2,rep,name=Scripts,json=scripts" json:"Scripts,omitempty"`
}

func (m *MsgBattleScriptList) Reset()                    { *m = MsgBattleScriptList{} }
func (m *MsgBattleScriptList) String() string            { return proto.CompactTextString(m) }
func (*MsgBattleScriptList) ProtoMessage()               {}
func (*MsgBattleScriptList) Descriptor() ([]byte, []int) { return fileDescriptor9, []int{20} }

func (m *MsgBattleScriptList) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *MsgBattleScriptList) GetScripts() []*MsgBattleScript {
	if m != nil {
		return m.Scripts
	}
	return nil
}

type MsgBattleMonsterAI struct {
	ExcludeMonsterGID string `protobuf:"bytes,1,opt,name=ExcludeMonsterGID,json=excludeMonsterGID" json:"ExcludeMonsterGID,omitempty"`
}

func (m *MsgBattleMonsterAI) Reset()                    { *m = MsgBattleMonsterAI{} }
func (m *MsgBattleMonsterAI) String() string            { return proto.CompactTextString(m) }
func (*MsgBattleMonsterAI) ProtoMessage()               {}
func (*MsgBattleMonsterAI) Descriptor() ([]byte, []int) { return fileDescriptor9, []int{21} }

func (m *MsgBattleMonsterAI) GetExcludeMonsterGID() string {
	if m != nil {
		return m.ExcludeMonsterGID
	}
	return ""
}

type MsgBattleMonster struct {
	Fighter *MsgFighter            `protobuf:"bytes,1,opt,name=Fighter,json=fighter" json:"Fighter,omitempty"`
	AI      *MsgBattleMonsterAI    `protobuf:"bytes,2,opt,name=AI,json=aI" json:"AI,omitempty"`
	Scripts []*MsgBattleScriptList `protobuf:"bytes,3,rep,name=Scripts,json=scripts" json:"Scripts,omitempty"`
}

func (m *MsgBattleMonster) Reset()                    { *m = MsgBattleMonster{} }
func (m *MsgBattleMonster) String() string            { return proto.CompactTextString(m) }
func (*MsgBattleMonster) ProtoMessage()               {}
func (*MsgBattleMonster) Descriptor() ([]byte, []int) { return fileDescriptor9, []int{22} }

func (m *MsgBattleMonster) GetFighter() *MsgFighter {
	if m != nil {
		return m.Fighter
	}
	return nil
}

func (m *MsgBattleMonster) GetAI() *MsgBattleMonsterAI {
	if m != nil {
		return m.AI
	}
	return nil
}

func (m *MsgBattleMonster) GetScripts() []*MsgBattleScriptList {
	if m != nil {
		return m.Scripts
	}
	return nil
}

//
type MsgBattleMonsterCreate struct {
	List   []*MsgBattleMonster `protobuf:"bytes,1,rep,name=List,json=list" json:"List,omitempty"`
	AreaID uint32              `protobuf:"varint,2,opt,name=AreaID,json=areaID" json:"AreaID,omitempty"`
	WaveID uint32              `protobuf:"varint,3,opt,name=WaveID,json=waveID" json:"WaveID,omitempty"`
}

func (m *MsgBattleMonsterCreate) Reset()                    { *m = MsgBattleMonsterCreate{} }
func (m *MsgBattleMonsterCreate) String() string            { return proto.CompactTextString(m) }
func (*MsgBattleMonsterCreate) ProtoMessage()               {}
func (*MsgBattleMonsterCreate) Descriptor() ([]byte, []int) { return fileDescriptor9, []int{23} }

func (m *MsgBattleMonsterCreate) GetList() []*MsgBattleMonster {
	if m != nil {
		return m.List
	}
	return nil
}

func (m *MsgBattleMonsterCreate) GetAreaID() uint32 {
	if m != nil {
		return m.AreaID
	}
	return 0
}

func (m *MsgBattleMonsterCreate) GetWaveID() uint32 {
	if m != nil {
		return m.WaveID
	}
	return 0
}

//
type MsgBattleTriggerEnter struct {
	TriggerID uint32 `protobuf:"varint,1,opt,name=TriggerID,json=triggerID" json:"TriggerID,omitempty"`
}

func (m *MsgBattleTriggerEnter) Reset()                    { *m = MsgBattleTriggerEnter{} }
func (m *MsgBattleTriggerEnter) String() string            { return proto.CompactTextString(m) }
func (*MsgBattleTriggerEnter) ProtoMessage()               {}
func (*MsgBattleTriggerEnter) Descriptor() ([]byte, []int) { return fileDescriptor9, []int{24} }

func (m *MsgBattleTriggerEnter) GetTriggerID() uint32 {
	if m != nil {
		return m.TriggerID
	}
	return 0
}

type MsgBattleAreaScriptStart struct {
	TriggerID uint32             `protobuf:"varint,1,opt,name=TriggerID,json=triggerID" json:"TriggerID,omitempty"`
	AreaID    uint32             `protobuf:"varint,2,opt,name=AreaID,json=areaID" json:"AreaID,omitempty"`
	Type      string             `protobuf:"bytes,3,opt,name=Type,json=type" json:"Type,omitempty"`
	Scripts   []*MsgBattleScript `protobuf:"bytes,4,rep,name=Scripts,json=scripts" json:"Scripts,omitempty"`
}

func (m *MsgBattleAreaScriptStart) Reset()                    { *m = MsgBattleAreaScriptStart{} }
func (m *MsgBattleAreaScriptStart) String() string            { return proto.CompactTextString(m) }
func (*MsgBattleAreaScriptStart) ProtoMessage()               {}
func (*MsgBattleAreaScriptStart) Descriptor() ([]byte, []int) { return fileDescriptor9, []int{25} }

func (m *MsgBattleAreaScriptStart) GetTriggerID() uint32 {
	if m != nil {
		return m.TriggerID
	}
	return 0
}

func (m *MsgBattleAreaScriptStart) GetAreaID() uint32 {
	if m != nil {
		return m.AreaID
	}
	return 0
}

func (m *MsgBattleAreaScriptStart) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *MsgBattleAreaScriptStart) GetScripts() []*MsgBattleScript {
	if m != nil {
		return m.Scripts
	}
	return nil
}

type MsgBattleAreaScriptFinish struct {
	TriggerID uint32 `protobuf:"varint,1,opt,name=TriggerID,json=triggerID" json:"TriggerID,omitempty"`
	AreaID    uint32 `protobuf:"varint,2,opt,name=AreaID,json=areaID" json:"AreaID,omitempty"`
	Type      string `protobuf:"bytes,3,opt,name=Type,json=type" json:"Type,omitempty"`
}

func (m *MsgBattleAreaScriptFinish) Reset()                    { *m = MsgBattleAreaScriptFinish{} }
func (m *MsgBattleAreaScriptFinish) String() string            { return proto.CompactTextString(m) }
func (*MsgBattleAreaScriptFinish) ProtoMessage()               {}
func (*MsgBattleAreaScriptFinish) Descriptor() ([]byte, []int) { return fileDescriptor9, []int{26} }

func (m *MsgBattleAreaScriptFinish) GetTriggerID() uint32 {
	if m != nil {
		return m.TriggerID
	}
	return 0
}

func (m *MsgBattleAreaScriptFinish) GetAreaID() uint32 {
	if m != nil {
		return m.AreaID
	}
	return 0
}

func (m *MsgBattleAreaScriptFinish) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

//
type MsgBattleDebugDamage struct {
	Atker uint32 `protobuf:"varint,1,opt,name=Atker,json=atker" json:"Atker,omitempty"`
	Defer uint32 `protobuf:"varint,2,opt,name=Defer,json=defer" json:"Defer,omitempty"`
	Hurt  int32  `protobuf:"varint,3,opt,name=hurt" json:"hurt,omitempty"`
}

func (m *MsgBattleDebugDamage) Reset()                    { *m = MsgBattleDebugDamage{} }
func (m *MsgBattleDebugDamage) String() string            { return proto.CompactTextString(m) }
func (*MsgBattleDebugDamage) ProtoMessage()               {}
func (*MsgBattleDebugDamage) Descriptor() ([]byte, []int) { return fileDescriptor9, []int{27} }

func (m *MsgBattleDebugDamage) GetAtker() uint32 {
	if m != nil {
		return m.Atker
	}
	return 0
}

func (m *MsgBattleDebugDamage) GetDefer() uint32 {
	if m != nil {
		return m.Defer
	}
	return 0
}

func (m *MsgBattleDebugDamage) GetHurt() int32 {
	if m != nil {
		return m.Hurt
	}
	return 0
}

type MsgFighterStateEvent struct {
	EType  EFighterStateEvent `protobuf:"varint,1,opt,name=EType,json=eType,enum=pb.EFighterStateEvent" json:"EType,omitempty"`
	Target EFighterState      `protobuf:"varint,2,opt,name=Target,json=target,enum=pb.EFighterState" json:"Target,omitempty"`
}

func (m *MsgFighterStateEvent) Reset()                    { *m = MsgFighterStateEvent{} }
func (m *MsgFighterStateEvent) String() string            { return proto.CompactTextString(m) }
func (*MsgFighterStateEvent) ProtoMessage()               {}
func (*MsgFighterStateEvent) Descriptor() ([]byte, []int) { return fileDescriptor9, []int{28} }

func (m *MsgFighterStateEvent) GetEType() EFighterStateEvent {
	if m != nil {
		return m.EType
	}
	return EFighterStateEvent_FSE_None
}

func (m *MsgFighterStateEvent) GetTarget() EFighterState {
	if m != nil {
		return m.Target
	}
	return EFighterState_FS_None
}

func init() {
	proto.RegisterType((*MsgFighter)(nil), "pb.MsgFighter")
	proto.RegisterType((*MsgFighterCli)(nil), "pb.MsgFighterCli")
	proto.RegisterType((*MsgRoleInFight)(nil), "pb.MsgRoleInFight")
	proto.RegisterType((*MsgRegionInfo)(nil), "pb.MsgRegionInfo")
	proto.RegisterType((*MsgBattleStartData)(nil), "pb.MsgBattleStartData")
	proto.RegisterType((*MsgBattleFinishData)(nil), "pb.MsgBattleFinishData")
	proto.RegisterType((*MsgBattleYouLost)(nil), "pb.MsgBattleYouLost")
	proto.RegisterType((*MsgBattleCreateByRoom)(nil), "pb.MsgBattleCreateByRoom")
	proto.RegisterType((*MsgBattleCreateReq)(nil), "pb.MsgBattleCreateReq")
	proto.RegisterType((*MsgBattleCreateAck)(nil), "pb.MsgBattleCreateAck")
	proto.RegisterType((*MsgBattleReConnectReq)(nil), "pb.MsgBattleReConnectReq")
	proto.RegisterType((*MsgBattleReConnectAck)(nil), "pb.MsgBattleReConnectAck")
	proto.RegisterType((*MsgBattleEnterReq)(nil), "pb.MsgBattleEnterReq")
	proto.RegisterType((*MsgBattleEnterAck)(nil), "pb.MsgBattleEnterAck")
	proto.RegisterType((*MsgBattleLeaveReq)(nil), "pb.MsgBattleLeaveReq")
	proto.RegisterType((*MsgBattleLeaveAck)(nil), "pb.MsgBattleLeaveAck")
	proto.RegisterType((*MsgBattleStart)(nil), "pb.MsgBattleStart")
	proto.RegisterType((*MsgBattleFinish)(nil), "pb.MsgBattleFinish")
	proto.RegisterType((*MsgBattlePhySync)(nil), "pb.MsgBattlePhySync")
	proto.RegisterType((*MsgBattleScript)(nil), "pb.MsgBattleScript")
	proto.RegisterType((*MsgBattleScriptList)(nil), "pb.MsgBattleScriptList")
	proto.RegisterType((*MsgBattleMonsterAI)(nil), "pb.MsgBattleMonsterAI")
	proto.RegisterType((*MsgBattleMonster)(nil), "pb.MsgBattleMonster")
	proto.RegisterType((*MsgBattleMonsterCreate)(nil), "pb.MsgBattleMonsterCreate")
	proto.RegisterType((*MsgBattleTriggerEnter)(nil), "pb.MsgBattleTriggerEnter")
	proto.RegisterType((*MsgBattleAreaScriptStart)(nil), "pb.MsgBattleAreaScriptStart")
	proto.RegisterType((*MsgBattleAreaScriptFinish)(nil), "pb.MsgBattleAreaScriptFinish")
	proto.RegisterType((*MsgBattleDebugDamage)(nil), "pb.MsgBattleDebugDamage")
	proto.RegisterType((*MsgFighterStateEvent)(nil), "pb.MsgFighterStateEvent")
	proto.RegisterEnum("pb.AttrType", AttrType_name, AttrType_value)
	proto.RegisterEnum("pb.EFighterState", EFighterState_name, EFighterState_value)
	proto.RegisterEnum("pb.EFighterStateEvent", EFighterStateEvent_name, EFighterStateEvent_value)
}

func init() { proto.RegisterFile("msg_fight.proto", fileDescriptor9) }

var fileDescriptor9 = []byte{
	// 1587 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xc4, 0x57, 0x5f, 0x6b, 0xdb, 0x58,
	0x16, 0xaf, 0x24, 0xcb, 0xb2, 0x8f, 0x63, 0x47, 0xb9, 0x49, 0x53, 0x6d, 0x29, 0x25, 0x88, 0xa5,
	0x78, 0x43, 0x1b, 0x76, 0x5b, 0x96, 0x7d, 0x2b, 0x38, 0x56, 0xdc, 0xb8, 0xad, 0x4b, 0x90, 0x43,
	0xb7, 0xe9, 0x4b, 0xb8, 0x96, 0xaf, 0xe5, 0x8b, 0x6d, 0xc9, 0x95, 0xae, 0x9d, 0xf8, 0x61, 0x61,
	0x1f, 0x17, 0x16, 0xf6, 0x61, 0x77, 0x61, 0x3e, 0xc0, 0xc0, 0x3c, 0xcc, 0xb7, 0x98, 0x6f, 0x36,
	0xdc, 0x3f, 0x91, 0x65, 0xc7, 0x4d, 0xca, 0xcc, 0xc0, 0x3c, 0xd9, 0xe7, 0xcf, 0x3d, 0xe7, 0xfc,
	0xce, 0xbf, 0x7b, 0x05, 0xdb, 0x93, 0x34, 0xbc, 0x1c, 0xd0, 0x70, 0xc8, 0x8e, 0xa6, 0x49, 0xcc,
	0x62, 0xa4, 0x4f, 0x7b, 0x8f, 0xcb, 0x93, 0x34, 0x94, 0xa4, 0xfb, 0x1f, 0x1d, 0xa0, 0x93, 0x86,
	0x2d, 0xae, 0x41, 0x12, 0x54, 0x03, 0xbd, 0xed, 0x39, 0xda, 0x81, 0x56, 0xaf, 0xfa, 0x3a, 0xf5,
	0x10, 0x82, 0xc2, 0x9b, 0x19, 0xed, 0x3b, 0xba, 0xe0, 0x14, 0xc2, 0x19, 0xed, 0xa3, 0x3d, 0x30,
	0x1b, 0x8c, 0x25, 0xa9, 0x63, 0x1c, 0x18, 0xf5, 0xaa, 0x6f, 0x62, 0x4e, 0xf0, 0x93, 0xa7, 0x53,
	0xc7, 0x94, 0x27, 0x87, 0x53, 0xae, 0xd5, 0xc1, 0xd7, 0xa7, 0x53, 0xa7, 0x28, 0x58, 0xe6, 0x84,
	0x13, 0xdc, 0xde, 0x59, 0x9c, 0x7e, 0x72, 0x4a, 0x07, 0x5a, 0xdd, 0xf4, 0x0b, 0xd3, 0x38, 0xfd,
	0xa4, 0x78, 0x17, 0x4e, 0x39, 0xe3, 0x5d, 0x28, 0xde, 0x67, 0x07, 0x32, 0xde, 0x67, 0x64, 0x83,
	0x71, 0x81, 0xaf, 0x9c, 0x8a, 0x60, 0x19, 0x0b, 0x7c, 0x85, 0x1c, 0xb0, 0x3e, 0xd2, 0x94, 0xf6,
	0xc6, 0xc4, 0xd9, 0x3a, 0xd0, 0xea, 0x25, 0xdf, 0x9a, 0x4b, 0x92, 0xeb, 0x36, 0xd8, 0xc8, 0xd9,
	0x13, 0xbe, 0x0d, 0xcc, 0x46, 0x9c, 0xe3, 0x91, 0x81, 0xf3, 0x50, 0x72, 0xfa, 0x64, 0xc0, 0x23,
	0xec, 0x4e, 0x09, 0xe9, 0x3b, 0xfb, 0x32, 0xc2, 0x94, 0x13, 0xee, 0x05, 0x54, 0x97, 0xf9, 0x68,
	0x8e, 0xe9, 0x37, 0xa5, 0x44, 0x82, 0x37, 0x6e, 0x83, 0x2f, 0xe4, 0xc0, 0xbb, 0x3f, 0x6a, 0x50,
	0xeb, 0xa4, 0xa1, 0x1f, 0x8f, 0x49, 0x3b, 0x12, 0x1e, 0x44, 0x0c, 0x24, 0xcd, 0xec, 0x9b, 0x29,
	0x27, 0x44, 0xf4, 0x41, 0x20, 0x3c, 0x94, 0x7d, 0x03, 0x07, 0x41, 0xe6, 0xd4, 0x58, 0xad, 0xc3,
	0x79, 0x3c, 0x22, 0x91, 0x70, 0x52, 0xf6, 0x4d, 0xc6, 0x09, 0x74, 0x08, 0x25, 0x15, 0x7c, 0xea,
	0x98, 0x07, 0x46, 0xbd, 0xf2, 0xb2, 0x76, 0x34, 0xed, 0x1d, 0x2d, 0x31, 0xf9, 0xa5, 0x81, 0x92,
	0xa3, 0xc7, 0x50, 0xea, 0x92, 0x64, 0x4e, 0x92, 0xb6, 0xa7, 0xca, 0x54, 0x4a, 0x15, 0xed, 0xbe,
	0x16, 0x79, 0xf0, 0x49, 0x48, 0xe3, 0xa8, 0x1d, 0x0d, 0x62, 0xf4, 0x22, 0x67, 0x58, 0x13, 0x86,
	0x77, 0x56, 0x0d, 0x37, 0xc7, 0x74, 0x69, 0xdb, 0xfd, 0xa7, 0x0e, 0xa8, 0x93, 0x86, 0xc7, 0x98,
	0xb1, 0x31, 0xe9, 0x32, 0x9c, 0x30, 0x0f, 0x33, 0xcc, 0x5d, 0x4a, 0x56, 0x86, 0xb9, 0xd4, 0x53,
	0x34, 0x7a, 0x0a, 0x20, 0x65, 0xb9, 0xfc, 0x42, 0x2f, 0xe3, 0xa0, 0x23, 0x40, 0x52, 0xde, 0x4c,
	0x08, 0x66, 0x44, 0x86, 0xae, 0x52, 0x82, 0x7a, 0xb7, 0x24, 0x3c, 0x69, 0x2d, 0xd6, 0xf6, 0x54,
	0x11, 0x0a, 0x03, 0xd6, 0xf6, 0x96, 0x49, 0x33, 0xf3, 0x49, 0xab, 0x83, 0xc9, 0xab, 0x92, 0x3a,
	0x45, 0x01, 0x0c, 0x29, 0x60, 0xb9, 0x4a, 0xf9, 0x66, 0xc2, 0x15, 0xd0, 0x21, 0xd8, 0x32, 0x06,
	0x8f, 0x0e, 0x06, 0x34, 0x98, 0x8d, 0xd9, 0xc2, 0xb1, 0x84, 0x7d, 0xbb, 0xb7, 0xc6, 0x77, 0xbf,
	0xd7, 0x60, 0x37, 0x4b, 0x41, 0x8b, 0x46, 0x34, 0x1d, 0x8a, 0x1c, 0xec, 0x43, 0xf1, 0xef, 0x34,
	0x8a, 0x48, 0xa2, 0x32, 0x50, 0xbc, 0x12, 0x14, 0xfa, 0x23, 0x98, 0x6d, 0x46, 0x26, 0xa9, 0xa3,
	0x2f, 0xeb, 0xd6, 0x3c, 0x4b, 0x68, 0x40, 0x38, 0xdb, 0x37, 0x29, 0x17, 0x6e, 0x6c, 0x85, 0x7c,
	0x56, 0x0b, 0x77, 0x66, 0xd5, 0x5c, 0xcf, 0xaa, 0xfb, 0x01, 0xec, 0x2c, 0xc8, 0x8b, 0x78, 0xf6,
	0x3e, 0x4e, 0xd9, 0xaf, 0xa9, 0x92, 0xfb, 0x0f, 0x78, 0x98, 0xd9, 0x93, 0xe5, 0x38, 0x5e, 0xf8,
	0x71, 0x3c, 0xe1, 0xb0, 0xf9, 0x6f, 0x66, 0xb2, 0x98, 0x08, 0x8a, 0x3b, 0xe3, 0xfc, 0x9c, 0xb9,
	0x52, 0xa2, 0x68, 0xf4, 0x67, 0xb0, 0x8e, 0x99, 0xe8, 0x1e, 0x81, 0xb7, 0xf2, 0x72, 0x5f, 0x95,
	0x66, 0xad, 0xaf, 0x7c, 0xab, 0x27, 0xd5, 0xdc, 0xeb, 0x5c, 0xdb, 0x49, 0xf7, 0x3e, 0xf9, 0x72,
	0x27, 0xa0, 0xc7, 0xb9, 0xc6, 0xd6, 0xc5, 0x4a, 0x5b, 0x4e, 0xc8, 0xa6, 0x72, 0x1b, 0x5f, 0x29,
	0xf7, 0xe7, 0x5b, 0x9e, 0x1b, 0xc1, 0x28, 0x8f, 0x40, 0xfb, 0x26, 0x04, 0x9b, 0x16, 0x8c, 0xdb,
	0xcd, 0x25, 0xd5, 0x27, 0xcd, 0x38, 0x8a, 0x48, 0xc0, 0xee, 0x03, 0x76, 0x5f, 0xa5, 0xda, 0x9b,
	0x8c, 0xfe, 0xa2, 0x98, 0xdd, 0x7f, 0x6b, 0xb0, 0x93, 0xc9, 0x4f, 0x22, 0xbe, 0x66, 0xc8, 0x97,
	0x0c, 0x89, 0x96, 0x6b, 0xd5, 0xfb, 0x86, 0xfc, 0x66, 0x68, 0x8d, 0x4d, 0x43, 0xbb, 0xb2, 0xe9,
	0x1c, 0xb0, 0x9a, 0x63, 0x7a, 0x4e, 0x27, 0x44, 0x75, 0xb5, 0x15, 0x48, 0xd2, 0x6d, 0xae, 0x07,
	0xc3, 0x41, 0x39, 0x60, 0xf9, 0x84, 0x35, 0xe3, 0x3e, 0x51, 0xf1, 0x58, 0x89, 0x24, 0xb9, 0x79,
	0x39, 0xfd, 0xb2, 0xfa, 0x72, 0xd2, 0xdd, 0x9f, 0xf2, 0x90, 0xde, 0x13, 0x3c, 0x27, 0xbf, 0x23,
	0x24, 0xf4, 0x04, 0xca, 0xcd, 0x71, 0x9c, 0x92, 0xf3, 0xc5, 0x94, 0xa8, 0x5d, 0x5d, 0x0e, 0x6e,
	0x18, 0xb9, 0x8d, 0x62, 0xe5, 0x37, 0x8a, 0xfb, 0x62, 0x1d, 0xc2, 0x9d, 0x89, 0x70, 0x7f, 0xd0,
	0xc5, 0x05, 0x95, 0xab, 0xf2, 0x1a, 0x36, 0xed, 0x16, 0x36, 0x17, 0xb6, 0xba, 0xc9, 0x5c, 0xe8,
	0x8a, 0xb0, 0x25, 0xfa, 0xad, 0x34, 0xc7, 0x93, 0x3a, 0x81, 0x4f, 0x70, 0x7f, 0x21, 0x74, 0x8c,
	0x1b, 0x9d, 0x25, 0x8f, 0xeb, 0xf0, 0xfb, 0x23, 0xd3, 0x91, 0x5b, 0x6c, 0x2b, 0xc8, 0xf1, 0x96,
	0x5b, 0xda, 0xbc, 0x6f, 0x4b, 0x3f, 0x05, 0x38, 0x4f, 0x68, 0x18, 0xf2, 0x9b, 0x4c, 0x2e, 0xf5,
	0xaa, 0x0f, 0x2c, 0xe3, 0xa0, 0xd7, 0x50, 0x69, 0x24, 0x04, 0x77, 0x83, 0x84, 0x4e, 0x59, 0xea,
	0x58, 0xc2, 0xde, 0x93, 0x95, 0x26, 0x5f, 0xca, 0x05, 0x10, 0xbf, 0x82, 0x97, 0x07, 0xdc, 0x16,
	0x6c, 0xaf, 0x2d, 0x76, 0xf4, 0x0a, 0x4a, 0xc7, 0x4c, 0xfe, 0x57, 0x43, 0xf3, 0x68, 0xc5, 0xde,
	0x72, 0xff, 0xfb, 0xa5, 0x9e, 0x52, 0x74, 0xff, 0xa5, 0xe5, 0x96, 0xef, 0xd9, 0x70, 0xd1, 0x5d,
	0x44, 0x41, 0xf6, 0x46, 0xd2, 0x36, 0xbc, 0x91, 0xf4, 0x0d, 0x6f, 0x24, 0xe3, 0xf6, 0x1b, 0xa9,
	0xb0, 0x7c, 0x23, 0x3d, 0x83, 0x1a, 0xb7, 0xda, 0x9e, 0x4c, 0xfa, 0x14, 0x33, 0x32, 0x5e, 0x88,
	0xce, 0x2a, 0xf9, 0xb5, 0x74, 0x85, 0xeb, 0xbe, 0xcb, 0x41, 0x92, 0x30, 0x37, 0xbd, 0x7c, 0xce,
	0x30, 0x1b, 0xaa, 0x77, 0x49, 0x61, 0x8a, 0xd9, 0x90, 0xf7, 0xf1, 0x19, 0x4e, 0xf0, 0x44, 0x44,
	0x51, 0xf6, 0xcd, 0x29, 0x27, 0xdc, 0x4f, 0xb9, 0x8b, 0x4f, 0x1a, 0x7b, 0x4f, 0x53, 0xb1, 0xd9,
	0x44, 0xff, 0x6a, 0xd2, 0x00, 0xe3, 0xad, 0xfb, 0x02, 0xac, 0x9b, 0x32, 0xc8, 0x6b, 0x6f, 0x77,
	0x75, 0xd7, 0x08, 0x99, 0x6f, 0xa5, 0x2a, 0xf3, 0xc7, 0xb9, 0x25, 0xdb, 0x89, 0xa3, 0x94, 0x0f,
	0x77, 0x1b, 0x3d, 0x87, 0x9d, 0x93, 0xeb, 0x60, 0x3c, 0xeb, 0xdf, 0xf0, 0xde, 0xa8, 0xc0, 0xcb,
	0xfe, 0x0e, 0x59, 0x17, 0xb8, 0xdf, 0xe5, 0xb3, 0xae, 0xf8, 0xa8, 0x0e, 0x96, 0xba, 0x05, 0x54,
	0xf9, 0xd6, 0x9f, 0x4d, 0x96, 0xba, 0x14, 0xd0, 0x33, 0xd0, 0x1b, 0x6d, 0x91, 0x84, 0xf5, 0xc5,
	0x98, 0x05, 0xe4, 0xeb, 0xb8, 0x8d, 0xfe, 0xb2, 0x44, 0x66, 0x08, 0x64, 0x8f, 0x36, 0x20, 0xe3,
	0x79, 0x59, 0xa2, 0x4b, 0x60, 0x7f, 0xdd, 0x98, 0xbc, 0x49, 0x50, 0x1d, 0x0a, 0x5c, 0x55, 0xbd,
	0xbc, 0xf6, 0x36, 0xb9, 0xf5, 0x0b, 0x63, 0x9e, 0xe4, 0x7d, 0x28, 0xf2, 0xde, 0x6d, 0x7b, 0x6a,
	0x16, 0x8b, 0x58, 0x50, 0x62, 0x47, 0xe0, 0x39, 0xc9, 0xf6, 0x50, 0xf1, 0x4a, 0x50, 0xee, 0x5f,
	0x73, 0xb7, 0x80, 0x1a, 0x1a, 0xb1, 0x33, 0xf9, 0xca, 0xc9, 0x86, 0x48, 0x75, 0x41, 0x39, 0x9b,
	0x21, 0xf7, 0x7f, 0x1a, 0x38, 0x5f, 0x1b, 0x96, 0xbb, 0x8f, 0x7e, 0x35, 0xc2, 0x9b, 0xf6, 0x30,
	0x36, 0xb7, 0x47, 0xe1, 0x1b, 0xda, 0x83, 0xc0, 0x1f, 0x36, 0x04, 0xa5, 0x46, 0xf4, 0x37, 0x8b,
	0xca, 0xfd, 0x08, 0x7b, 0x99, 0x1b, 0x8f, 0xf4, 0x66, 0xa1, 0x87, 0x27, 0x38, 0x24, 0xf2, 0xd3,
	0x68, 0x94, 0x3d, 0xec, 0x4c, 0xcc, 0x09, 0xce, 0xf5, 0xc8, 0x80, 0x24, 0xca, 0xb0, 0xd9, 0xe7,
	0x04, 0xb7, 0x3b, 0x9c, 0xa9, 0x77, 0x8d, 0xe9, 0x8b, 0xff, 0x6e, 0x2c, 0xec, 0xaa, 0x8e, 0xeb,
	0x32, 0xcc, 0xc8, 0xc9, 0x9c, 0x44, 0x0c, 0x3d, 0x07, 0xf3, 0x24, 0x9b, 0x9c, 0x9a, 0xec, 0xba,
	0x93, 0x5b, 0x6a, 0xbe, 0x29, 0x6f, 0x83, 0x3f, 0x41, 0xf1, 0x1c, 0x27, 0x21, 0x61, 0xc2, 0x61,
	0x4d, 0xbe, 0xd3, 0x57, 0xd4, 0xfd, 0x22, 0x13, 0x0a, 0x87, 0xff, 0xd5, 0xa1, 0xc4, 0x3f, 0xe6,
	0xc4, 0x39, 0x80, 0x62, 0x83, 0x8d, 0xce, 0x86, 0x0b, 0xfb, 0x01, 0xda, 0xe2, 0xfc, 0x51, 0x07,
	0x87, 0x34, 0xb0, 0x35, 0x2e, 0xf1, 0xc8, 0x80, 0x4b, 0x74, 0x2e, 0xf1, 0xc8, 0x40, 0x4a, 0x0c,
	0x2e, 0x69, 0x47, 0x94, 0x9d, 0x4e, 0xed, 0x02, 0x2a, 0x41, 0xa1, 0x99, 0x50, 0x66, 0x9b, 0x5c,
	0x87, 0xff, 0xf3, 0x31, 0x23, 0x76, 0x11, 0x55, 0xa1, 0xdc, 0xf4, 0xba, 0xb3, 0xf8, 0x2d, 0xc5,
	0x91, 0x6d, 0x29, 0xd3, 0xe2, 0xd3, 0xcb, 0x2e, 0x09, 0xd5, 0xe1, 0x0c, 0x47, 0xe7, 0xf1, 0xcc,
	0x2e, 0xa3, 0x5d, 0xd8, 0xee, 0x0e, 0x71, 0x14, 0x9e, 0x62, 0xfa, 0x96, 0xe2, 0xee, 0x90, 0x44,
	0x36, 0xa0, 0x0a, 0x58, 0x1e, 0x19, 0x08, 0xd3, 0x15, 0xee, 0xa4, 0x43, 0xd3, 0xd4, 0xde, 0x42,
	0x7b, 0x60, 0xe7, 0x74, 0xa3, 0x0e, 0xb7, 0x5e, 0xe5, 0xf6, 0xf8, 0xbf, 0x77, 0x71, 0x14, 0xda,
	0x35, 0xee, 0xba, 0x13, 0xcf, 0x89, 0x74, 0xb6, 0xad, 0x10, 0x9e, 0xce, 0x62, 0xdb, 0xe6, 0x56,
	0x1b, 0x6c, 0xd4, 0x22, 0x51, 0x68, 0xef, 0x48, 0x82, 0x25, 0x1d, 0x7c, 0x6d, 0xa3, 0xc3, 0xff,
	0x6b, 0x50, 0x5d, 0x49, 0x17, 0x17, 0xb7, 0xba, 0x97, 0x1f, 0xe2, 0x88, 0xd8, 0x0f, 0x14, 0xd1,
	0xee, 0x8f, 0x89, 0xad, 0x29, 0x82, 0xfb, 0xb0, 0x75, 0xee, 0xad, 0xd5, 0xbd, 0x6c, 0x30, 0x86,
	0x83, 0x91, 0x6d, 0xf0, 0x50, 0x5a, 0xdd, 0xcb, 0x63, 0x72, 0x4a, 0x99, 0x5d, 0x40, 0xdb, 0x50,
	0xe1, 0xc2, 0x5e, 0x14, 0x27, 0x13, 0x3c, 0xb6, 0x4d, 0xb4, 0x03, 0x55, 0x6e, 0x14, 0xcf, 0x69,
	0x88, 0x19, 0x8d, 0x23, 0xbb, 0xa8, 0xac, 0x79, 0x04, 0xf7, 0x6d, 0x0b, 0xd5, 0x00, 0x5a, 0xdd,
	0xcb, 0x8f, 0x34, 0x60, 0x71, 0xb2, 0xb0, 0x4b, 0x87, 0x7f, 0x03, 0x74, 0xbb, 0xe6, 0xd2, 0xc9,
	0xc9, 0x4d, 0x6c, 0xbb, 0xb0, 0xcd, 0x29, 0x59, 0x7e, 0xa1, 0x65, 0x6b, 0xc7, 0xfa, 0xa9, 0xd1,
	0x2b, 0x8a, 0xcf, 0xfd, 0x57, 0x3f, 0x07, 0x00, 0x00, 0xff, 0xff, 0x74, 0xa9, 0x04, 0x73, 0x10,
	0x10, 0x00, 0x00,
}
