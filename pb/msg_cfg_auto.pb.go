// Code generated by protoc-gen-go. DO NOT EDIT.
// source: msg_cfg_auto.proto

package pb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// center/GiftPack/GiftData
type MsgCfgGiftData struct {
	Channel   int32         `protobuf:"zigzag32,1,opt,name=Channel,json=channel" json:"Channel,omitempty"`
	Mtype     int32         `protobuf:"zigzag32,2,opt,name=Mtype,json=mtype" json:"Mtype,omitempty"`
	Changroup int32         `protobuf:"zigzag32,3,opt,name=Changroup,json=changroup" json:"Changroup,omitempty"`
	Door      int32         `protobuf:"zigzag32,4,opt,name=Door,json=door" json:"Door,omitempty"`
	Limit     int32         `protobuf:"zigzag32,5,opt,name=Limit,json=limit" json:"Limit,omitempty"`
	Bymail    bool          `protobuf:"varint,6,opt,name=Bymail,json=bymail" json:"Bymail,omitempty"`
	Awards    []*CPriceItem `protobuf:"bytes,7,rep,name=Awards,json=awards" json:"Awards,omitempty"`
	I18Nid    int32         `protobuf:"zigzag32,8,opt,name=I18Nid,json=i18Nid" json:"I18Nid,omitempty"`
}

func (m *MsgCfgGiftData) Reset()                    { *m = MsgCfgGiftData{} }
func (m *MsgCfgGiftData) String() string            { return proto.CompactTextString(m) }
func (*MsgCfgGiftData) ProtoMessage()               {}
func (*MsgCfgGiftData) Descriptor() ([]byte, []int) { return fileDescriptor12, []int{0} }

func (m *MsgCfgGiftData) GetChannel() int32 {
	if m != nil {
		return m.Channel
	}
	return 0
}

func (m *MsgCfgGiftData) GetMtype() int32 {
	if m != nil {
		return m.Mtype
	}
	return 0
}

func (m *MsgCfgGiftData) GetChangroup() int32 {
	if m != nil {
		return m.Changroup
	}
	return 0
}

func (m *MsgCfgGiftData) GetDoor() int32 {
	if m != nil {
		return m.Door
	}
	return 0
}

func (m *MsgCfgGiftData) GetLimit() int32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *MsgCfgGiftData) GetBymail() bool {
	if m != nil {
		return m.Bymail
	}
	return false
}

func (m *MsgCfgGiftData) GetAwards() []*CPriceItem {
	if m != nil {
		return m.Awards
	}
	return nil
}

func (m *MsgCfgGiftData) GetI18Nid() int32 {
	if m != nil {
		return m.I18Nid
	}
	return 0
}

// center/GiftPack/channelgroup
type MsgGiftChannelGroup struct {
	Gid   int32    `protobuf:"zigzag32,1,opt,name=Gid,json=gid" json:"Gid,omitempty"`
	Chans []string `protobuf:"bytes,2,rep,name=Chans,json=chans" json:"Chans,omitempty"`
}

func (m *MsgGiftChannelGroup) Reset()                    { *m = MsgGiftChannelGroup{} }
func (m *MsgGiftChannelGroup) String() string            { return proto.CompactTextString(m) }
func (*MsgGiftChannelGroup) ProtoMessage()               {}
func (*MsgGiftChannelGroup) Descriptor() ([]byte, []int) { return fileDescriptor12, []int{1} }

func (m *MsgGiftChannelGroup) GetGid() int32 {
	if m != nil {
		return m.Gid
	}
	return 0
}

func (m *MsgGiftChannelGroup) GetChans() []string {
	if m != nil {
		return m.Chans
	}
	return nil
}

// center/RankList
type MsgRankListCfg struct {
	Type        ERankListType `protobuf:"varint,1,opt,name=Type,json=type,enum=pb.ERankListType" json:"Type,omitempty"`
	ShowLen     int32         `protobuf:"zigzag32,2,opt,name=ShowLen,json=showLen" json:"ShowLen,omitempty"`
	MaxLen      int32         `protobuf:"zigzag32,3,opt,name=MaxLen,json=maxLen" json:"MaxLen,omitempty"`
	RefreshSpan uint32        `protobuf:"varint,4,opt,name=RefreshSpan,json=refreshSpan" json:"RefreshSpan,omitempty"`
}

func (m *MsgRankListCfg) Reset()                    { *m = MsgRankListCfg{} }
func (m *MsgRankListCfg) String() string            { return proto.CompactTextString(m) }
func (*MsgRankListCfg) ProtoMessage()               {}
func (*MsgRankListCfg) Descriptor() ([]byte, []int) { return fileDescriptor12, []int{2} }

func (m *MsgRankListCfg) GetType() ERankListType {
	if m != nil {
		return m.Type
	}
	return ERankListType_ERLT_PlayerLv
}

func (m *MsgRankListCfg) GetShowLen() int32 {
	if m != nil {
		return m.ShowLen
	}
	return 0
}

func (m *MsgRankListCfg) GetMaxLen() int32 {
	if m != nil {
		return m.MaxLen
	}
	return 0
}

func (m *MsgRankListCfg) GetRefreshSpan() uint32 {
	if m != nil {
		return m.RefreshSpan
	}
	return 0
}

// fight/MonsterProperty
type MsgMonsterCfg struct {
	ID      uint32 `protobuf:"varint,1,opt,name=ID,json=iD" json:"ID,omitempty"`
	OriName string `protobuf:"bytes,2,opt,name=OriName,json=oriName" json:"OriName,omitempty"`
}

func (m *MsgMonsterCfg) Reset()                    { *m = MsgMonsterCfg{} }
func (m *MsgMonsterCfg) String() string            { return proto.CompactTextString(m) }
func (*MsgMonsterCfg) ProtoMessage()               {}
func (*MsgMonsterCfg) Descriptor() ([]byte, []int) { return fileDescriptor12, []int{3} }

func (m *MsgMonsterCfg) GetID() uint32 {
	if m != nil {
		return m.ID
	}
	return 0
}

func (m *MsgMonsterCfg) GetOriName() string {
	if m != nil {
		return m.OriName
	}
	return ""
}

// game/FBCfg
type MsgFBCfg struct {
	ID           uint32 `protobuf:"varint,1,opt,name=ID,json=iD" json:"ID,omitempty"`
	FightCnt     uint32 `protobuf:"varint,2,opt,name=FightCnt,json=fightCnt" json:"FightCnt,omitempty"`
	FirstWinItem uint32 `protobuf:"varint,3,opt,name=FirstWinItem,json=firstWinItem" json:"FirstWinItem,omitempty"`
	FirstWinICnt uint32 `protobuf:"varint,4,opt,name=FirstWinICnt,json=firstWinICnt" json:"FirstWinICnt,omitempty"`
	Item         uint32 `protobuf:"varint,5,opt,name=Item,json=item" json:"Item,omitempty"`
	ItemCnt      uint32 `protobuf:"varint,6,opt,name=ItemCnt,json=itemCnt" json:"ItemCnt,omitempty"`
	DayCnt       uint32 `protobuf:"varint,7,opt,name=DayCnt,json=dayCnt" json:"DayCnt,omitempty"`
}

func (m *MsgFBCfg) Reset()                    { *m = MsgFBCfg{} }
func (m *MsgFBCfg) String() string            { return proto.CompactTextString(m) }
func (*MsgFBCfg) ProtoMessage()               {}
func (*MsgFBCfg) Descriptor() ([]byte, []int) { return fileDescriptor12, []int{4} }

func (m *MsgFBCfg) GetID() uint32 {
	if m != nil {
		return m.ID
	}
	return 0
}

func (m *MsgFBCfg) GetFightCnt() uint32 {
	if m != nil {
		return m.FightCnt
	}
	return 0
}

func (m *MsgFBCfg) GetFirstWinItem() uint32 {
	if m != nil {
		return m.FirstWinItem
	}
	return 0
}

func (m *MsgFBCfg) GetFirstWinICnt() uint32 {
	if m != nil {
		return m.FirstWinICnt
	}
	return 0
}

func (m *MsgFBCfg) GetItem() uint32 {
	if m != nil {
		return m.Item
	}
	return 0
}

func (m *MsgFBCfg) GetItemCnt() uint32 {
	if m != nil {
		return m.ItemCnt
	}
	return 0
}

func (m *MsgFBCfg) GetDayCnt() uint32 {
	if m != nil {
		return m.DayCnt
	}
	return 0
}

// game/GoodsList
type MsgItemCfg struct {
	ID     uint32 `protobuf:"varint,1,opt,name=ID,json=iD" json:"ID,omitempty"`
	Name   string `protobuf:"bytes,2,opt,name=Name,json=name" json:"Name,omitempty"`
	Price  uint32 `protobuf:"varint,3,opt,name=Price,json=price" json:"Price,omitempty"`
	Param1 uint32 `protobuf:"varint,4,opt,name=Param1,json=param1" json:"Param1,omitempty"`
	Param2 string `protobuf:"bytes,5,opt,name=Param2,json=param2" json:"Param2,omitempty"`
}

func (m *MsgItemCfg) Reset()                    { *m = MsgItemCfg{} }
func (m *MsgItemCfg) String() string            { return proto.CompactTextString(m) }
func (*MsgItemCfg) ProtoMessage()               {}
func (*MsgItemCfg) Descriptor() ([]byte, []int) { return fileDescriptor12, []int{5} }

func (m *MsgItemCfg) GetID() uint32 {
	if m != nil {
		return m.ID
	}
	return 0
}

func (m *MsgItemCfg) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *MsgItemCfg) GetPrice() uint32 {
	if m != nil {
		return m.Price
	}
	return 0
}

func (m *MsgItemCfg) GetParam1() uint32 {
	if m != nil {
		return m.Param1
	}
	return 0
}

func (m *MsgItemCfg) GetParam2() string {
	if m != nil {
		return m.Param2
	}
	return ""
}

// game/HeroAttri
type MsgHeroCfg struct {
	ID           uint32   `protobuf:"varint,1,opt,name=ID,json=iD" json:"ID,omitempty"`
	Type         uint32   `protobuf:"varint,2,opt,name=Type,json=type" json:"Type,omitempty"`
	ZhengY       uint32   `protobuf:"varint,3,opt,name=ZhengY,json=zhengY" json:"ZhengY,omitempty"`
	Job          uint32   `protobuf:"varint,4,opt,name=Job,json=job" json:"Job,omitempty"`
	Atk          float32  `protobuf:"fixed32,5,opt,name=Atk,json=atk" json:"Atk,omitempty"`
	AtkGrow      float32  `protobuf:"fixed32,6,opt,name=AtkGrow,json=atkGrow" json:"AtkGrow,omitempty"`
	DefPhy       float32  `protobuf:"fixed32,7,opt,name=DefPhy,json=defPhy" json:"DefPhy,omitempty"`
	DefPhyGrow   float32  `protobuf:"fixed32,8,opt,name=DefPhyGrow,json=defPhyGrow" json:"DefPhyGrow,omitempty"`
	DefMagic     float32  `protobuf:"fixed32,9,opt,name=DefMagic,json=defMagic" json:"DefMagic,omitempty"`
	DefMagicGrow float32  `protobuf:"fixed32,10,opt,name=DefMagicGrow,json=defMagicGrow" json:"DefMagicGrow,omitempty"`
	HP           float32  `protobuf:"fixed32,11,opt,name=HP,json=hP" json:"HP,omitempty"`
	HPGrow       float32  `protobuf:"fixed32,12,opt,name=HPGrow,json=hPGrow" json:"HPGrow,omitempty"`
	AtkSpeed     float32  `protobuf:"fixed32,13,opt,name=AtkSpeed,json=atkSpeed" json:"AtkSpeed,omitempty"`
	Speed        float32  `protobuf:"fixed32,14,opt,name=Speed,json=speed" json:"Speed,omitempty"`
	HPHuiFu      float32  `protobuf:"fixed32,15,opt,name=HPHuiFu,json=hPHuiFu" json:"HPHuiFu,omitempty"`
	MPHuiFu      float32  `protobuf:"fixed32,16,opt,name=MPHuiFu,json=mPHuiFu" json:"MPHuiFu,omitempty"`
	WuQi         uint32   `protobuf:"varint,17,opt,name=WuQi,json=wuQi" json:"WuQi,omitempty"`
	FangJu       uint32   `protobuf:"varint,18,opt,name=FangJu,json=fangJu" json:"FangJu,omitempty"`
	SouSi        uint32   `protobuf:"varint,19,opt,name=SouSi,json=souSi" json:"SouSi,omitempty"`
	Xie          uint32   `protobuf:"varint,20,opt,name=Xie,json=xie" json:"Xie,omitempty"`
	Skill        []uint32 `protobuf:"varint,21,rep,packed,name=Skill,json=skill" json:"Skill,omitempty"`
}

func (m *MsgHeroCfg) Reset()                    { *m = MsgHeroCfg{} }
func (m *MsgHeroCfg) String() string            { return proto.CompactTextString(m) }
func (*MsgHeroCfg) ProtoMessage()               {}
func (*MsgHeroCfg) Descriptor() ([]byte, []int) { return fileDescriptor12, []int{6} }

func (m *MsgHeroCfg) GetID() uint32 {
	if m != nil {
		return m.ID
	}
	return 0
}

func (m *MsgHeroCfg) GetType() uint32 {
	if m != nil {
		return m.Type
	}
	return 0
}

func (m *MsgHeroCfg) GetZhengY() uint32 {
	if m != nil {
		return m.ZhengY
	}
	return 0
}

func (m *MsgHeroCfg) GetJob() uint32 {
	if m != nil {
		return m.Job
	}
	return 0
}

func (m *MsgHeroCfg) GetAtk() float32 {
	if m != nil {
		return m.Atk
	}
	return 0
}

func (m *MsgHeroCfg) GetAtkGrow() float32 {
	if m != nil {
		return m.AtkGrow
	}
	return 0
}

func (m *MsgHeroCfg) GetDefPhy() float32 {
	if m != nil {
		return m.DefPhy
	}
	return 0
}

func (m *MsgHeroCfg) GetDefPhyGrow() float32 {
	if m != nil {
		return m.DefPhyGrow
	}
	return 0
}

func (m *MsgHeroCfg) GetDefMagic() float32 {
	if m != nil {
		return m.DefMagic
	}
	return 0
}

func (m *MsgHeroCfg) GetDefMagicGrow() float32 {
	if m != nil {
		return m.DefMagicGrow
	}
	return 0
}

func (m *MsgHeroCfg) GetHP() float32 {
	if m != nil {
		return m.HP
	}
	return 0
}

func (m *MsgHeroCfg) GetHPGrow() float32 {
	if m != nil {
		return m.HPGrow
	}
	return 0
}

func (m *MsgHeroCfg) GetAtkSpeed() float32 {
	if m != nil {
		return m.AtkSpeed
	}
	return 0
}

func (m *MsgHeroCfg) GetSpeed() float32 {
	if m != nil {
		return m.Speed
	}
	return 0
}

func (m *MsgHeroCfg) GetHPHuiFu() float32 {
	if m != nil {
		return m.HPHuiFu
	}
	return 0
}

func (m *MsgHeroCfg) GetMPHuiFu() float32 {
	if m != nil {
		return m.MPHuiFu
	}
	return 0
}

func (m *MsgHeroCfg) GetWuQi() uint32 {
	if m != nil {
		return m.WuQi
	}
	return 0
}

func (m *MsgHeroCfg) GetFangJu() uint32 {
	if m != nil {
		return m.FangJu
	}
	return 0
}

func (m *MsgHeroCfg) GetSouSi() uint32 {
	if m != nil {
		return m.SouSi
	}
	return 0
}

func (m *MsgHeroCfg) GetXie() uint32 {
	if m != nil {
		return m.Xie
	}
	return 0
}

func (m *MsgHeroCfg) GetSkill() []uint32 {
	if m != nil {
		return m.Skill
	}
	return nil
}

// game/HeroLevel
type MsgHeroLevelCfg struct {
	Type    uint32  `protobuf:"varint,1,opt,name=Type,json=type" json:"Type,omitempty"`
	Level   uint32  `protobuf:"varint,2,opt,name=Level,json=level" json:"Level,omitempty"`
	NeedExp uint32  `protobuf:"varint,3,opt,name=NeedExp,json=needExp" json:"NeedExp,omitempty"`
	Rate    float32 `protobuf:"fixed32,4,opt,name=Rate,json=rate" json:"Rate,omitempty"`
}

func (m *MsgHeroLevelCfg) Reset()                    { *m = MsgHeroLevelCfg{} }
func (m *MsgHeroLevelCfg) String() string            { return proto.CompactTextString(m) }
func (*MsgHeroLevelCfg) ProtoMessage()               {}
func (*MsgHeroLevelCfg) Descriptor() ([]byte, []int) { return fileDescriptor12, []int{7} }

func (m *MsgHeroLevelCfg) GetType() uint32 {
	if m != nil {
		return m.Type
	}
	return 0
}

func (m *MsgHeroLevelCfg) GetLevel() uint32 {
	if m != nil {
		return m.Level
	}
	return 0
}

func (m *MsgHeroLevelCfg) GetNeedExp() uint32 {
	if m != nil {
		return m.NeedExp
	}
	return 0
}

func (m *MsgHeroLevelCfg) GetRate() float32 {
	if m != nil {
		return m.Rate
	}
	return 0
}

// game/HeroPinJie
type MsgHeroPinJieCfg struct {
	Type      uint32    `protobuf:"varint,1,opt,name=Type,json=type" json:"Type,omitempty"`
	Job       uint32    `protobuf:"varint,2,opt,name=Job,json=job" json:"Job,omitempty"`
	PinJie    uint32    `protobuf:"varint,3,opt,name=PinJie,json=pinJie" json:"PinJie,omitempty"`
	NeedLevel uint32    `protobuf:"varint,4,opt,name=NeedLevel,json=needLevel" json:"NeedLevel,omitempty"`
	PinJieKa  uint32    `protobuf:"varint,5,opt,name=PinJieKa,json=pinJieKa" json:"PinJieKa,omitempty"`
	Cost      uint32    `protobuf:"varint,6,opt,name=Cost,json=cost" json:"Cost,omitempty"`
	CostCnt   uint32    `protobuf:"varint,7,opt,name=CostCnt,json=costCnt" json:"CostCnt,omitempty"`
	JinBi     uint32    `protobuf:"varint,8,opt,name=JinBi,json=jinBi" json:"JinBi,omitempty"`
	Rate      float32   `protobuf:"fixed32,9,opt,name=Rate,json=rate" json:"Rate,omitempty"`
	Attr      []float32 `protobuf:"fixed32,10,rep,packed,name=Attr,json=attr" json:"Attr,omitempty"`
}

func (m *MsgHeroPinJieCfg) Reset()                    { *m = MsgHeroPinJieCfg{} }
func (m *MsgHeroPinJieCfg) String() string            { return proto.CompactTextString(m) }
func (*MsgHeroPinJieCfg) ProtoMessage()               {}
func (*MsgHeroPinJieCfg) Descriptor() ([]byte, []int) { return fileDescriptor12, []int{8} }

func (m *MsgHeroPinJieCfg) GetType() uint32 {
	if m != nil {
		return m.Type
	}
	return 0
}

func (m *MsgHeroPinJieCfg) GetJob() uint32 {
	if m != nil {
		return m.Job
	}
	return 0
}

func (m *MsgHeroPinJieCfg) GetPinJie() uint32 {
	if m != nil {
		return m.PinJie
	}
	return 0
}

func (m *MsgHeroPinJieCfg) GetNeedLevel() uint32 {
	if m != nil {
		return m.NeedLevel
	}
	return 0
}

func (m *MsgHeroPinJieCfg) GetPinJieKa() uint32 {
	if m != nil {
		return m.PinJieKa
	}
	return 0
}

func (m *MsgHeroPinJieCfg) GetCost() uint32 {
	if m != nil {
		return m.Cost
	}
	return 0
}

func (m *MsgHeroPinJieCfg) GetCostCnt() uint32 {
	if m != nil {
		return m.CostCnt
	}
	return 0
}

func (m *MsgHeroPinJieCfg) GetJinBi() uint32 {
	if m != nil {
		return m.JinBi
	}
	return 0
}

func (m *MsgHeroPinJieCfg) GetRate() float32 {
	if m != nil {
		return m.Rate
	}
	return 0
}

func (m *MsgHeroPinJieCfg) GetAttr() []float32 {
	if m != nil {
		return m.Attr
	}
	return nil
}

// game/HeroStar
type MsgHeroStarCfg struct {
	Type         uint32    `protobuf:"varint,1,opt,name=Type,json=type" json:"Type,omitempty"`
	Star         uint32    `protobuf:"varint,2,opt,name=Star,json=star" json:"Star,omitempty"`
	LevelLimit   uint32    `protobuf:"varint,3,opt,name=LevelLimit,json=levelLimit" json:"LevelLimit,omitempty"`
	HeroCnt      uint32    `protobuf:"varint,4,opt,name=HeroCnt,json=heroCnt" json:"HeroCnt,omitempty"`
	HeroStar     uint32    `protobuf:"varint,5,opt,name=HeroStar,json=heroStar" json:"HeroStar,omitempty"`
	JinBi        uint32    `protobuf:"varint,6,opt,name=JinBi,json=jinBi" json:"JinBi,omitempty"`
	BeiDongLevel uint32    `protobuf:"varint,7,opt,name=BeiDongLevel,json=beiDongLevel" json:"BeiDongLevel,omitempty"`
	SkillCnt     uint32    `protobuf:"varint,8,opt,name=SkillCnt,json=skillCnt" json:"SkillCnt,omitempty"`
	Rate         float32   `protobuf:"fixed32,9,opt,name=Rate,json=rate" json:"Rate,omitempty"`
	Attr         []float32 `protobuf:"fixed32,10,rep,packed,name=Attr,json=attr" json:"Attr,omitempty"`
}

func (m *MsgHeroStarCfg) Reset()                    { *m = MsgHeroStarCfg{} }
func (m *MsgHeroStarCfg) String() string            { return proto.CompactTextString(m) }
func (*MsgHeroStarCfg) ProtoMessage()               {}
func (*MsgHeroStarCfg) Descriptor() ([]byte, []int) { return fileDescriptor12, []int{9} }

func (m *MsgHeroStarCfg) GetType() uint32 {
	if m != nil {
		return m.Type
	}
	return 0
}

func (m *MsgHeroStarCfg) GetStar() uint32 {
	if m != nil {
		return m.Star
	}
	return 0
}

func (m *MsgHeroStarCfg) GetLevelLimit() uint32 {
	if m != nil {
		return m.LevelLimit
	}
	return 0
}

func (m *MsgHeroStarCfg) GetHeroCnt() uint32 {
	if m != nil {
		return m.HeroCnt
	}
	return 0
}

func (m *MsgHeroStarCfg) GetHeroStar() uint32 {
	if m != nil {
		return m.HeroStar
	}
	return 0
}

func (m *MsgHeroStarCfg) GetJinBi() uint32 {
	if m != nil {
		return m.JinBi
	}
	return 0
}

func (m *MsgHeroStarCfg) GetBeiDongLevel() uint32 {
	if m != nil {
		return m.BeiDongLevel
	}
	return 0
}

func (m *MsgHeroStarCfg) GetSkillCnt() uint32 {
	if m != nil {
		return m.SkillCnt
	}
	return 0
}

func (m *MsgHeroStarCfg) GetRate() float32 {
	if m != nil {
		return m.Rate
	}
	return 0
}

func (m *MsgHeroStarCfg) GetAttr() []float32 {
	if m != nil {
		return m.Attr
	}
	return nil
}

// game/RegionList
type MsgRegionList struct {
	ID        uint32  `protobuf:"varint,1,opt,name=ID,json=iD" json:"ID,omitempty"`
	Type      EFBType `protobuf:"varint,2,opt,name=Type,json=type,enum=pb.EFBType" json:"Type,omitempty"`
	Level     uint32  `protobuf:"varint,3,opt,name=Level,json=level" json:"Level,omitempty"`
	Time      uint32  `protobuf:"varint,4,opt,name=Time,json=time" json:"Time,omitempty"`
	CostItem  uint32  `protobuf:"varint,5,opt,name=CostItem,json=costItem" json:"CostItem,omitempty"`
	CostCnt   uint32  `protobuf:"varint,6,opt,name=CostCnt,json=costCnt" json:"CostCnt,omitempty"`
	CheckType uint32  `protobuf:"varint,7,opt,name=CheckType,json=checkType" json:"CheckType,omitempty"`
}

func (m *MsgRegionList) Reset()                    { *m = MsgRegionList{} }
func (m *MsgRegionList) String() string            { return proto.CompactTextString(m) }
func (*MsgRegionList) ProtoMessage()               {}
func (*MsgRegionList) Descriptor() ([]byte, []int) { return fileDescriptor12, []int{10} }

func (m *MsgRegionList) GetID() uint32 {
	if m != nil {
		return m.ID
	}
	return 0
}

func (m *MsgRegionList) GetType() EFBType {
	if m != nil {
		return m.Type
	}
	return EFBType_FBTNormal
}

func (m *MsgRegionList) GetLevel() uint32 {
	if m != nil {
		return m.Level
	}
	return 0
}

func (m *MsgRegionList) GetTime() uint32 {
	if m != nil {
		return m.Time
	}
	return 0
}

func (m *MsgRegionList) GetCostItem() uint32 {
	if m != nil {
		return m.CostItem
	}
	return 0
}

func (m *MsgRegionList) GetCostCnt() uint32 {
	if m != nil {
		return m.CostCnt
	}
	return 0
}

func (m *MsgRegionList) GetCheckType() uint32 {
	if m != nil {
		return m.CheckType
	}
	return 0
}

// game/SpecialItem
type MsgSpecialItemCfg struct {
	Type ESpecialItem `protobuf:"varint,1,opt,name=Type,json=type,enum=pb.ESpecialItem" json:"Type,omitempty"`
	ID   uint32       `protobuf:"varint,2,opt,name=ID,json=iD" json:"ID,omitempty"`
}

func (m *MsgSpecialItemCfg) Reset()                    { *m = MsgSpecialItemCfg{} }
func (m *MsgSpecialItemCfg) String() string            { return proto.CompactTextString(m) }
func (*MsgSpecialItemCfg) ProtoMessage()               {}
func (*MsgSpecialItemCfg) Descriptor() ([]byte, []int) { return fileDescriptor12, []int{11} }

func (m *MsgSpecialItemCfg) GetType() ESpecialItem {
	if m != nil {
		return m.Type
	}
	return ESpecialItem_JinBi
}

func (m *MsgSpecialItemCfg) GetID() uint32 {
	if m != nil {
		return m.ID
	}
	return 0
}

// game/summon/TAward
type MsgTripAward struct {
	Id     int32           `protobuf:"zigzag32,1,opt,name=Id,json=id" json:"Id,omitempty"`
	Awards []*MsgAwardCell `protobuf:"bytes,2,rep,name=Awards,json=awards" json:"Awards,omitempty"`
}

func (m *MsgTripAward) Reset()                    { *m = MsgTripAward{} }
func (m *MsgTripAward) String() string            { return proto.CompactTextString(m) }
func (*MsgTripAward) ProtoMessage()               {}
func (*MsgTripAward) Descriptor() ([]byte, []int) { return fileDescriptor12, []int{12} }

func (m *MsgTripAward) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *MsgTripAward) GetAwards() []*MsgAwardCell {
	if m != nil {
		return m.Awards
	}
	return nil
}

// util/dbcfg
type MsgDBCfg struct {
	Type     string `protobuf:"bytes,1,opt,name=Type,json=type" json:"Type,omitempty"`
	Name     string `protobuf:"bytes,2,opt,name=Name,json=name" json:"Name,omitempty"`
	IP       string `protobuf:"bytes,3,opt,name=IP,json=iP" json:"IP,omitempty"`
	Port     uint32 `protobuf:"varint,4,opt,name=Port,json=port" json:"Port,omitempty"`
	User     string `protobuf:"bytes,5,opt,name=User,json=user" json:"User,omitempty"`
	Password string `protobuf:"bytes,6,opt,name=Password,json=password" json:"Password,omitempty"`
}

func (m *MsgDBCfg) Reset()                    { *m = MsgDBCfg{} }
func (m *MsgDBCfg) String() string            { return proto.CompactTextString(m) }
func (*MsgDBCfg) ProtoMessage()               {}
func (*MsgDBCfg) Descriptor() ([]byte, []int) { return fileDescriptor12, []int{13} }

func (m *MsgDBCfg) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *MsgDBCfg) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *MsgDBCfg) GetIP() string {
	if m != nil {
		return m.IP
	}
	return ""
}

func (m *MsgDBCfg) GetPort() uint32 {
	if m != nil {
		return m.Port
	}
	return 0
}

func (m *MsgDBCfg) GetUser() string {
	if m != nil {
		return m.User
	}
	return ""
}

func (m *MsgDBCfg) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

func init() {
	proto.RegisterType((*MsgCfgGiftData)(nil), "pb.MsgCfgGiftData")
	proto.RegisterType((*MsgGiftChannelGroup)(nil), "pb.MsgGiftChannelGroup")
	proto.RegisterType((*MsgRankListCfg)(nil), "pb.MsgRankListCfg")
	proto.RegisterType((*MsgMonsterCfg)(nil), "pb.MsgMonsterCfg")
	proto.RegisterType((*MsgFBCfg)(nil), "pb.MsgFBCfg")
	proto.RegisterType((*MsgItemCfg)(nil), "pb.MsgItemCfg")
	proto.RegisterType((*MsgHeroCfg)(nil), "pb.MsgHeroCfg")
	proto.RegisterType((*MsgHeroLevelCfg)(nil), "pb.MsgHeroLevelCfg")
	proto.RegisterType((*MsgHeroPinJieCfg)(nil), "pb.MsgHeroPinJieCfg")
	proto.RegisterType((*MsgHeroStarCfg)(nil), "pb.MsgHeroStarCfg")
	proto.RegisterType((*MsgRegionList)(nil), "pb.MsgRegionList")
	proto.RegisterType((*MsgSpecialItemCfg)(nil), "pb.MsgSpecialItemCfg")
	proto.RegisterType((*MsgTripAward)(nil), "pb.MsgTripAward")
	proto.RegisterType((*MsgDBCfg)(nil), "pb.MsgDBCfg")
}

func init() { proto.RegisterFile("msg_cfg_auto.proto", fileDescriptor12) }

var fileDescriptor12 = []byte{
	// 1205 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x56, 0xcd, 0x6e, 0xdb, 0x46,
	0x10, 0x86, 0x28, 0x8a, 0x14, 0xd7, 0x92, 0x63, 0x33, 0x69, 0x40, 0x04, 0x45, 0x2b, 0x10, 0x6d,
	0xe1, 0x53, 0x80, 0xb8, 0x97, 0xf6, 0xd0, 0x83, 0x25, 0xc5, 0x96, 0x5d, 0x33, 0x55, 0xa8, 0x14,
	0x69, 0x7b, 0x09, 0x56, 0xe4, 0x8a, 0xda, 0x48, 0xe4, 0x12, 0xbb, 0xab, 0x38, 0xee, 0x03, 0xf4,
	0xd2, 0x3e, 0x53, 0x4f, 0x7d, 0x90, 0x3e, 0x45, 0xce, 0xc5, 0xcc, 0x2e, 0x25, 0xe5, 0xc7, 0x40,
	0x6f, 0xfc, 0xe6, 0xdb, 0xd9, 0x99, 0xf9, 0x66, 0x76, 0x97, 0x24, 0x2c, 0x55, 0xf1, 0x2a, 0x5b,
	0x14, 0xaf, 0xe8, 0x46, 0x8b, 0xc7, 0xb5, 0x14, 0x5a, 0x84, 0x4e, 0x3d, 0x7f, 0x74, 0x04, 0xf6,
	0x7a, 0x33, 0x5f, 0xf3, 0xcc, 0x58, 0x1f, 0x05, 0xa5, 0x2a, 0xec, 0x27, 0x92, 0x99, 0xa8, 0x16,
	0xdc, 0x5a, 0xe2, 0x7f, 0x5b, 0xe4, 0x30, 0x51, 0xc5, 0x68, 0x51, 0x5c, 0xf0, 0x85, 0x1e, 0x53,
	0x4d, 0xc3, 0x88, 0xf8, 0xa3, 0x25, 0xad, 0x2a, 0xb6, 0x8e, 0x5a, 0x83, 0xd6, 0xc9, 0x71, 0xea,
	0x67, 0x06, 0x86, 0x0f, 0x48, 0x27, 0xd1, 0xb7, 0x35, 0x8b, 0x1c, 0xb4, 0x77, 0x4a, 0x00, 0xe1,
	0xe7, 0x24, 0x80, 0xf5, 0x85, 0x14, 0x9b, 0x3a, 0x6a, 0x23, 0x13, 0x64, 0x8d, 0x21, 0x0c, 0x89,
	0x3b, 0x16, 0x42, 0x46, 0x2e, 0x12, 0x6e, 0x2e, 0x84, 0x84, 0x7d, 0xae, 0x79, 0xc9, 0x75, 0xd4,
	0x31, 0xfb, 0xac, 0x01, 0x84, 0x0f, 0x89, 0x37, 0xbc, 0x2d, 0x29, 0x5f, 0x47, 0xde, 0xa0, 0x75,
	0xd2, 0x4d, 0xbd, 0x39, 0xa2, 0xf0, 0x1b, 0xe2, 0x9d, 0xdd, 0x50, 0x99, 0xab, 0xc8, 0x1f, 0xb4,
	0x4f, 0x0e, 0x4e, 0x0f, 0x1f, 0xd7, 0xf3, 0xc7, 0xa3, 0xa9, 0xe4, 0x19, 0xbb, 0xd4, 0xac, 0x4c,
	0x3d, 0x8a, 0x2c, 0xf8, 0x5f, 0x3e, 0xf9, 0xee, 0x19, 0xcf, 0xa3, 0x2e, 0x6e, 0xeb, 0x71, 0x44,
	0xf1, 0x0f, 0xe4, 0x7e, 0xa2, 0xb0, 0x3c, 0x5b, 0xd6, 0x05, 0x26, 0x76, 0x44, 0xda, 0x17, 0x3c,
	0xb7, 0x25, 0xb6, 0x0b, 0x9e, 0x43, 0x5a, 0xb0, 0x42, 0x45, 0xce, 0xa0, 0x7d, 0x12, 0xa4, 0x1d,
	0x28, 0x42, 0xc5, 0x7f, 0x1a, 0x85, 0x52, 0x5a, 0xad, 0xae, 0xb9, 0xd2, 0xa3, 0x45, 0x11, 0x7e,
	0x4d, 0xdc, 0x17, 0x20, 0x03, 0xf8, 0x1e, 0x9e, 0x1e, 0x43, 0x3e, 0x4f, 0x1b, 0x1e, 0x88, 0xd4,
	0x45, 0x61, 0x22, 0xe2, 0xcf, 0x96, 0xe2, 0xe6, 0x9a, 0x55, 0x56, 0x30, 0x5f, 0x19, 0x08, 0xa9,
	0x26, 0xf4, 0x2d, 0x10, 0x46, 0x2f, 0xaf, 0x44, 0x14, 0x0e, 0xc8, 0x41, 0xca, 0x16, 0x92, 0xa9,
	0xe5, 0xac, 0xa6, 0x15, 0x6a, 0xd6, 0x4f, 0x0f, 0xe4, 0xce, 0x14, 0x7f, 0x4f, 0xfa, 0x89, 0x2a,
	0x12, 0x51, 0x29, 0xcd, 0x24, 0xe4, 0x72, 0x48, 0x9c, 0xcb, 0x31, 0x66, 0xd2, 0x4f, 0x1d, 0x3e,
	0x86, 0xa0, 0x3f, 0x49, 0xfe, 0x8c, 0x96, 0xa6, 0x4b, 0x41, 0xea, 0x0b, 0x03, 0xe3, 0x7f, 0x5a,
	0xa4, 0x9b, 0xa8, 0xe2, 0x7c, 0xf8, 0x29, 0xb7, 0x47, 0xa4, 0x7b, 0xce, 0x8b, 0xa5, 0x1e, 0x55,
	0x1a, 0xfd, 0xfa, 0x69, 0x77, 0x61, 0x71, 0x18, 0x93, 0xde, 0x39, 0x97, 0x4a, 0xbf, 0xe4, 0x15,
	0x08, 0x8e, 0x39, 0xf7, 0xd3, 0xde, 0x62, 0xcf, 0xf6, 0xde, 0x1a, 0xd8, 0xc3, 0xfd, 0x60, 0x0d,
	0xec, 0x13, 0x12, 0x17, 0xfd, 0x3b, 0xc8, 0xb9, 0x1c, 0xfc, 0x22, 0xe2, 0x83, 0x0d, 0x5c, 0x3c,
	0x34, 0xfb, 0xdc, 0x40, 0xd0, 0x68, 0x4c, 0x6f, 0x81, 0xf0, 0x91, 0xf0, 0x72, 0x44, 0xf1, 0x1b,
	0x42, 0x12, 0x55, 0xa0, 0xd3, 0x27, 0xea, 0x08, 0x89, 0xbb, 0x57, 0xbb, 0x5b, 0xd1, 0x92, 0x41,
	0x5f, 0x71, 0x5a, 0x6c, 0xe2, 0x9d, 0x1a, 0x00, 0xec, 0x3f, 0xa5, 0x92, 0x96, 0x4f, 0x6c, 0xae,
	0x5e, 0x8d, 0x68, 0x6b, 0x3f, 0xc5, 0x3c, 0x03, 0x6b, 0x3f, 0x8d, 0xdf, 0xb5, 0x31, 0xf0, 0x84,
	0x49, 0x71, 0x47, 0xe0, 0x17, 0xcd, 0xd1, 0xe8, 0xdb, 0x01, 0x78, 0x48, 0xbc, 0xdf, 0x96, 0xac,
	0x2a, 0x7e, 0xb5, 0x91, 0xbd, 0xdf, 0x11, 0xc1, 0xe8, 0x5d, 0x89, 0xb9, 0x8d, 0xdb, 0x7e, 0x2d,
	0xe6, 0x60, 0x39, 0xd3, 0x2b, 0x8c, 0xe8, 0xa4, 0x6d, 0xaa, 0x57, 0x20, 0xcc, 0x99, 0x5e, 0x5d,
	0x48, 0x71, 0x83, 0xc2, 0x38, 0xa9, 0x4f, 0x0d, 0x44, 0x61, 0xd8, 0x62, 0xba, 0xbc, 0x45, 0x61,
	0x9c, 0xd4, 0xcb, 0x11, 0x85, 0x5f, 0x10, 0x62, 0xec, 0xe8, 0xd4, 0x45, 0x8e, 0xe4, 0x5b, 0x0b,
	0xb4, 0x78, 0xcc, 0x16, 0x09, 0x2d, 0x78, 0x16, 0x05, 0xc8, 0x76, 0x73, 0x8b, 0xa1, 0x7d, 0x0d,
	0x87, 0xde, 0x04, 0xf9, 0x5e, 0xbe, 0x67, 0x83, 0x8a, 0x27, 0xd3, 0xe8, 0x00, 0x19, 0x67, 0x39,
	0x85, 0x3c, 0x26, 0x53, 0x5c, 0xdd, 0x33, 0x79, 0x2c, 0xa7, 0x4d, 0x9c, 0x33, 0xbd, 0x9a, 0xd5,
	0x8c, 0xe5, 0x51, 0xdf, 0xc4, 0xa1, 0x16, 0x43, 0x2b, 0x0c, 0x71, 0x88, 0x44, 0x47, 0xa1, 0x35,
	0x22, 0xfe, 0x64, 0x3a, 0xd9, 0xf0, 0xf3, 0x4d, 0x74, 0xcf, 0xd4, 0xba, 0x34, 0x10, 0x98, 0xc4,
	0x32, 0x47, 0x86, 0x29, 0x2d, 0x13, 0x12, 0xf7, 0xe5, 0xe6, 0x39, 0x8f, 0x8e, 0x8d, 0xde, 0x37,
	0x9b, 0xe7, 0x1c, 0x32, 0x3a, 0xa7, 0x55, 0x71, 0xb5, 0x89, 0x42, 0xa3, 0xf7, 0x02, 0x11, 0x46,
	0x15, 0x9b, 0x19, 0x8f, 0xee, 0x9b, 0x01, 0x50, 0x00, 0x40, 0xf3, 0x5f, 0x38, 0x8b, 0x1e, 0x98,
	0x2e, 0xbc, 0xe5, 0x38, 0x28, 0xb3, 0x15, 0x5f, 0xaf, 0xa3, 0xcf, 0x06, 0x6d, 0x5c, 0x07, 0x20,
	0xe6, 0xe4, 0x9e, 0xed, 0xfb, 0x35, 0x7b, 0xc3, 0xd6, 0xd0, 0xfc, 0x70, 0xef, 0x02, 0x68, 0x9a,
	0x0d, 0x97, 0x1a, 0xf0, 0x76, 0x02, 0x3a, 0x6b, 0x00, 0x50, 0xc0, 0x33, 0xc6, 0xf2, 0xa7, 0x6f,
	0x6b, 0x3b, 0x03, 0x7e, 0x65, 0x20, 0xec, 0x91, 0x52, 0xcd, 0x70, 0x0a, 0x9c, 0xd4, 0x95, 0x54,
	0xb3, 0xf8, 0x5d, 0x8b, 0x1c, 0xd9, 0x58, 0x53, 0x5e, 0x5d, 0x71, 0x76, 0x57, 0x30, 0x3b, 0x41,
	0xce, 0x6e, 0x82, 0x60, 0x6c, 0xd1, 0xa5, 0x99, 0xb5, 0x1a, 0x11, 0xdc, 0xce, 0x90, 0x80, 0x49,
	0xcd, 0x4c, 0x5c, 0x50, 0x35, 0x06, 0xe8, 0x95, 0xf1, 0xfa, 0x91, 0xda, 0x63, 0xd9, 0xad, 0x2d,
	0x86, 0xb8, 0x23, 0xa1, 0x9a, 0x73, 0xe9, 0x66, 0x42, 0x69, 0x7c, 0x1b, 0x84, 0xd2, 0xbb, 0x53,
	0xe9, 0x67, 0x06, 0x42, 0xf9, 0x57, 0xbc, 0x1a, 0x72, 0x1c, 0xbc, 0x7e, 0xda, 0x79, 0x0d, 0x60,
	0x5b, 0x64, 0xb0, 0x2b, 0x12, 0x6c, 0x67, 0x5a, 0xcb, 0x88, 0x0c, 0xda, 0x60, 0xa3, 0x5a, 0xcb,
	0xf8, 0x2f, 0x07, 0x2f, 0x59, 0x28, 0x7c, 0xa6, 0xa9, 0xbc, 0xab, 0xec, 0x90, 0xb8, 0x40, 0x37,
	0x87, 0x4c, 0x69, 0x2a, 0x61, 0xec, 0xb1, 0x16, 0xf3, 0xa2, 0x98, 0xe2, 0xc9, 0x7a, 0x6b, 0xc1,
	0xe1, 0x82, 0x33, 0xbb, 0xbd, 0x94, 0xfc, 0xa5, 0x81, 0x50, 0x7c, 0x13, 0xb0, 0x29, 0x7e, 0x69,
	0xf1, 0xae, 0x1c, 0x6f, 0xbf, 0x9c, 0x98, 0xf4, 0x86, 0x8c, 0x8f, 0x45, 0x55, 0x18, 0x3d, 0x8d,
	0x06, 0xbd, 0xf9, 0x9e, 0x0d, 0x76, 0xc5, 0x21, 0x82, 0x80, 0x46, 0x8b, 0xae, 0xb2, 0xf8, 0x7f,
	0xcb, 0xf1, 0x77, 0x0b, 0xaf, 0xf9, 0x94, 0x15, 0x5c, 0x54, 0xf0, 0xaa, 0x7c, 0x74, 0xdd, 0x7c,
	0xb9, 0x77, 0xdd, 0x1c, 0x9e, 0x1e, 0xe0, 0x13, 0x74, 0x3e, 0xdc, 0x7b, 0x7c, 0xb6, 0xe3, 0xd8,
	0xde, 0x1f, 0x47, 0x10, 0x95, 0x97, 0xcc, 0x2a, 0xe1, 0x6a, 0x5e, 0x32, 0x48, 0x18, 0x7a, 0xba,
	0x77, 0x35, 0x77, 0x33, 0x8b, 0xf7, 0xfb, 0xed, 0xbd, 0xdf, 0x6f, 0x7c, 0xf5, 0x59, 0xb6, 0xc2,
	0x2c, 0x8c, 0x0e, 0x41, 0xd6, 0x18, 0xe2, 0x4b, 0x72, 0x9c, 0xa8, 0x62, 0x56, 0xb3, 0x8c, 0xd3,
	0x75, 0x73, 0x57, 0x7f, 0xf5, 0xde, 0xb3, 0x79, 0x84, 0x39, 0xef, 0x2d, 0xb1, 0x89, 0x9b, 0x4a,
	0x9d, 0xa6, 0xd2, 0x78, 0x42, 0x7a, 0x89, 0x2a, 0x5e, 0x48, 0x5e, 0xe3, 0x5f, 0x00, 0xf2, 0xcd,
	0xb3, 0xed, 0xf0, 0x3c, 0x3c, 0xd9, 0xfe, 0x1e, 0x38, 0xf8, 0x7b, 0x80, 0xfb, 0x26, 0xaa, 0x40,
	0xe3, 0x88, 0xad, 0xd7, 0xcd, 0x0f, 0x42, 0xfc, 0x87, 0x79, 0x00, 0xc7, 0xc3, 0x0f, 0xc7, 0x2b,
	0xd8, 0x8d, 0xd7, 0x47, 0x8f, 0x07, 0x84, 0x9b, 0xa2, 0x88, 0x41, 0xea, 0xf0, 0x29, 0xac, 0x99,
	0x0a, 0xd9, 0xcc, 0x92, 0x5b, 0x0b, 0x89, 0x6d, 0xfd, 0x59, 0x31, 0x69, 0x1f, 0x0c, 0x77, 0xa3,
	0x98, 0xc4, 0x93, 0x45, 0x95, 0xba, 0x11, 0x32, 0x47, 0xe9, 0x82, 0xb4, 0x5b, 0x5b, 0x3c, 0x74,
	0x26, 0xed, 0xb9, 0x87, 0xff, 0x5f, 0xdf, 0xfe, 0x17, 0x00, 0x00, 0xff, 0xff, 0x9f, 0x96, 0x02,
	0xaa, 0xc8, 0x09, 0x00, 0x00,
}
